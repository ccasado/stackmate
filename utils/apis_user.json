{
  "api": [
    {
      "description": "Lists all network ACL items",
      "isasync": false,
      "name": "listNetworkACLs",
      "params": [
        {
          "description": "list network ACL Items by network Id",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNetworks,createNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network ACL Items by traffic type - Ingress or Egress",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network ACL Items by Protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network ACL Items by ACL Id",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list network ACL Items by Action",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lists network ACL Item with the specified ID",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createNetworkACL,updateNetworkACLItem",
      "response": [
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Creates a condition",
      "isasync": true,
      "name": "createCondition",
      "params": [
        {
          "description": "Threshold value.",
          "length": 255,
          "name": "threshold",
          "required": true,
          "type": "long"
        },
        {
          "description": "Relational Operator to be used with threshold.",
          "length": 255,
          "name": "relationaloperator",
          "required": true,
          "type": "string"
        },
        {
          "description": "the account of the condition. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID of the account.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "ID of the Counter.",
          "length": 255,
          "name": "counterid",
          "related": "listCounters,createCounter",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listConditions",
      "response": [
        {
          "description": "the domain id of the Condition owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Threshold Value for the counter.",
          "name": "threshold",
          "type": "long"
        },
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Details of the Counter.",
          "name": "counter",
          "type": "list"
        },
        {
          "description": "the owner of the Condition.",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the Condition.",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the Condition",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the owner.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the Condition",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Relational Operator to be used with threshold.",
          "name": "relationaloperator",
          "type": "string"
        }
      ]
    },
    {
      "description": "Copies a template from one zone to another.",
      "isasync": true,
      "name": "copyTemplate",
      "params": [
        {
          "description": "ID of the zone the template is being copied to.",
          "length": 255,
          "name": "destzoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is currently hosted on.",
          "length": 255,
          "name": "sourcezoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Template ID.",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsos,updateIso,copyIso,prepareTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
      "response": [
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds VM to specified network by creating a NIC",
      "isasync": true,
      "name": "addNicToVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,addNicToVirtualMachine,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine,listLoadBalancerRuleInstances",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Network ID",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNetworks,createNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "IP Address for the new network",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        }
      ],
      "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine,listLoadBalancerRuleInstances",
      "response": [
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        }
      ]
    },
    {
      "description": "Extracts volume",
      "isasync": true,
      "name": "extractVolume",
      "params": [
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        },
        {
          "description": "the url to which the volume would be extracted",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the zone where the volume is located",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,uploadVolume,migrateVolume,createVolume,resizeVolume,updateVolume,detachVolume,listVolumes",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "extractTemplate,extractIso",
      "response": [
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {},
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds acoount to a project",
      "isasync": true,
      "name": "addAccountToProject",
      "params": [
        {
          "description": "email to which invitation to the project is going to be sent",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the project to add the account to",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name of the account to be added to the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes an ggress firewall rule",
      "isasync": true,
      "name": "deleteEgressFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all available network offerings.",
      "isasync": false,
      "name": "listNetworkOfferings",
      "params": [
        {
          "description": "the ID of the network. Pass this in if you want to see the available network offering that a network can be changed to.",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNetworks,createNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if offering has tags specified",
          "length": 255,
          "name": "istagged",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if need to list only default network offerings. Default value is false",
          "length": 255,
          "name": "isdefault",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the tags for the network offering.",
          "length": 255,
          "name": "specifyvlan",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network offerings by id",
          "length": 255,
          "name": "id",
          "related": "updateNetworkOffering,listNetworkOfferings,createNetworkOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network offerings by tags",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network offerings by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by traffic type",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if need to list only network offerings which support specifying ip ranges",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the availability of network offering. Default value is Required",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list netowrk offerings available for network creation in specific zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the network offering can be used only for network creation inside the VPC",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if need to list only netwok offerings where source nat is supported, false otherwise",
          "length": 255,
          "name": "sourcenatsupported",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings by guest type: Shared or Isolated",
          "length": 255,
          "name": "guestiptype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateNetworkOffering,createNetworkOffering",
      "response": [
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        }
      ]
    },
    {
      "description": "List hypervisors",
      "isasync": false,
      "name": "listHypervisors",
      "params": [
        {
          "description": "the zone id for listing hypervisors.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Hypervisor name",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Create site to site vpn connection",
      "isasync": true,
      "name": "createVpnConnection",
      "params": [
        {
          "description": "id of the customer gateway",
          "length": 255,
          "name": "s2scustomergatewayid",
          "related": "createVpnCustomerGateway,listVpnCustomerGateways,updateVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "id of the vpn gateway",
          "length": 255,
          "name": "s2svpngatewayid",
          "related": "listVpnGateways,createVpnGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "resetVpnConnection,listVpnConnections",
      "response": [
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all volumes.",
      "isasync": false,
      "name": "listVolumes",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the type of disk volume",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the pod id the disk volume belongs to",
          "length": 255,
          "name": "podid",
          "related": "createPod,updatePod,listPods",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine,listLoadBalancerRuleInstances",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,uploadVolume,migrateVolume,createVolume,resizeVolume,updateVolume,detachVolume,listVolumes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list volumes on specified host",
          "length": 255,
          "name": "hostid",
          "related": "updateHost,prepareHostForMaintenance,cancelHostMaintenance,addBaremetalHost,addHost,listHosts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "suspendProject,updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,uploadVolume,migrateVolume,createVolume,resizeVolume,updateVolume,detachVolume",
      "response": [
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Suspends a project",
      "isasync": true,
      "name": "suspendProject",
      "params": [
        {
          "description": "id of the project to be suspended",
          "length": 255,
          "name": "id",
          "related": "suspendProject,updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
      "response": [
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a load balancer",
      "isasync": true,
      "name": "deleteLoadBalancer",
      "params": [
        {
          "description": "the ID of the Load Balancer",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Authorizes a particular ingress rule for this security group",
      "isasync": true,
      "name": "authorizeSecurityGroupIngress",
      "params": [
        {
          "description": "end port for this ingress rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with securityGroupName parameter",
          "length": 255,
          "name": "securitygroupid",
          "related": "createSecurityGroup,listSecurityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "TCP is default. UDP is the other supported protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "start port for this ingress rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional project of the security group",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "user to security group mapping",
          "length": 255,
          "name": "usersecuritygrouplist",
          "required": false,
          "type": "map"
        },
        {
          "description": "the cidr list associated",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "The name of the security group. Mutually exclusive with securityGroupName parameter",
          "length": 255,
          "name": "securitygroupname",
          "required": false,
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional account for the security group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "authorizeSecurityGroupEgress",
      "response": [
        {
          "description": "the CIDR notation for the base IP address of the security group rule",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the ending IP of the security group rule ",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the code for the ICMP message response",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "account owning the security group rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the type of the ICMP message response",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the id of the security group rule",
          "name": "ruleid",
          "type": "string"
        },
        {
          "description": "the protocol of the security group rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting IP of the security group rule",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "security group name",
          "name": "securitygroupname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Load Balancers",
      "isasync": false,
      "name": "listLoadBalancers",
      "params": [
        {
          "description": "the scheme of the Load Balancer. Supported value is Internal in the current release",
          "length": 255,
          "name": "scheme",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the source ip address of the Load Balancer",
          "length": 255,
          "name": "sourceipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Load Balancer",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the network id of the source ip address",
          "length": 255,
          "name": "sourceipaddressnetworkid",
          "related": "updateNetwork,listNetworks,createNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the Load Balancer",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network id of the Load Balancer",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork,listNetworks,createNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createLoadBalancer",
      "response": [
        {
          "description": "the name of the Load Balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project id of the Load Balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain of the Load Balancer",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the Load Balancer",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the list of rules associated with the Load Balancer",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "instance port of the load balancer rule",
              "name": "instanceport",
              "type": "integer"
            },
            {
              "description": "source port of the load balancer rule",
              "name": "sourceport",
              "type": "integer"
            },
            {
              "description": "the state of the load balancer rule",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Load Balancer ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of instances associated with the Load Balancer",
          "name": "loadbalancerinstance",
          "response": [
            {
              "description": "the ip address of the instance",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the state of the instance",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the name of the instance",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the instance ID",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Load Balancer source ip",
          "name": "sourceipaddress",
          "type": "string"
        },
        {
          "description": "the description of the Load Balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain ID of the Load Balancer",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Load Balancer source ip network id",
          "name": "sourceipaddressnetworkid",
          "type": "string"
        },
        {
          "description": "the account of the Load Balancer",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Load Balancer network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the project name of the Load Balancer",
          "name": "project",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Creates a template of a virtual machine. The virtual machine must be in a STOPPED state. A template created from this command is automatically designated as a private template visible to the account that created it.",
      "isasync": true,
      "name": "createTemplate",
      "params": [
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the snapshot the template is being created from. Either this parameter, or volumeId has to be passed in",
          "length": 255,
          "name": "snapshotid",
          "related": "listSnapshots,createSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Template details in key/value pairs.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "Optional, VM ID. If this presents, it is going to create a baremetal template for VM this ID refers to. This is only for VM whose hypervisor type is BareMetal",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine,listLoadBalancerRuleInstances",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the template requres HVM, false otherwise",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the disk volume the template is being created from. Either this parameter, or snapshotId has to be passed in",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,uploadVolume,migrateVolume,createVolume,resizeVolume,updateVolume,detachVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "32 or 64 bit",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Optional, only for baremetal hypervisor. The directory name where template stored on CIFS server",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
      "response": [
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        }
      ]
    },
    {
      "description": "List all virtual machine instances that are assigned to a load balancer rule.",
      "isasync": false,
      "name": "listLoadBalancerRuleInstances",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if listing all virtual machines currently applied to the load balancer rule; default is true",
          "length": 255,
          "name": "applied",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Migrate volume",
      "isasync": true,
      "name": "migrateVolume",
      "params": [
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,uploadVolume,migrateVolume,createVolume,resizeVolume,updateVolume,detachVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "destination storage pool ID to migrate the volume to",
          "length": 255,
          "name": "storageid",
          "related": "updateStoragePool,createStoragePool,cancelStorageMaintenance,findStoragePoolsForMigration,listStoragePools,enableStorageMaintenance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "if the volume should be live migrated when it is attached to a running vm",
          "length": 255,
          "name": "livemigrate",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "attachVolume,uploadVolume,createVolume,resizeVolume,updateVolume,detachVolume",
      "response": [
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a load balancer HealthCheck policy.",
      "isasync": true,
      "name": "deleteLBHealthCheckPolicy",
      "params": [
        {
          "description": "the ID of the load balancer HealthCheck policy",
          "length": 255,
          "name": "id",
          "related": "listLBHealthCheckPolicies,createLBHealthCheckPolicy",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a static route",
      "isasync": true,
      "name": "deleteStaticRoute",
      "params": [
        {
          "description": "the ID of the static route",
          "length": 255,
          "name": "id",
          "related": "listStaticRoutes,createStaticRoute",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Register a public key in a keypair under a certain name",
      "isasync": false,
      "name": "registerSSHKeyPair",
      "params": [
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Public key material of the keypair",
          "length": 5120,
          "name": "publickey",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listSSHKeyPairs,createSSHKeyPair",
      "response": [
        {
          "description": "Private key",
          "name": "privatekey",
          "type": "string"
        },
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists autoscale vm groups.",
      "isasync": false,
      "name": "listAutoScaleVmGroups",
      "params": [
        {
          "description": "the ID of the autoscale vm group",
          "length": 255,
          "name": "id",
          "related": "createAutoScaleVmGroup,disableAutoScaleVmGroup,listAutoScaleVmGroups,enableAutoScaleVmGroup,updateAutoScaleVmGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the policy",
          "length": 255,
          "name": "policyid",
          "related": "updateAutoScalePolicy,listAutoScalePolicies,createAutoScalePolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the loadbalancer",
          "length": 255,
          "name": "lbruleid",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the profile",
          "length": 255,
          "name": "vmprofileid",
          "related": "updateAutoScaleVmProfile,createAutoScaleVmProfile,listAutoScaleVmProfiles",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createAutoScaleVmGroup,disableAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup",
      "response": [
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Returns an encrypted password for the VM",
      "isasync": false,
      "name": "getVMPassword",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "The encrypted password of the VM",
          "name": "encryptedpassword",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists vm groups",
      "isasync": false,
      "name": "listInstanceGroups",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list instance groups by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list instance groups by ID",
          "length": 255,
          "name": "id",
          "related": "listInstanceGroups,updateInstanceGroup,createInstanceGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "updateInstanceGroup,createInstanceGroup",
      "response": [
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the id of the instance group",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a network",
      "isasync": false,
      "name": "createNetwork",
      "params": [
        {
          "description": "network domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the beginning IP address in the network IP range",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a network",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the beginning IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "startipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "Access control type; supported values are account and domain. In 3.0 all shared networks should have aclType=Domain, and all Isolated networks - Account. Account means that only the account owner can use the network, domain - all accouns in the domain can use the network",
          "length": 255,
          "name": "acltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the network",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ending IP address in the network IP range. If not specified, will be defaulted to startIP",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "account who will own the network",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the network. Required for Shared networks and Isolated networks when it belongs to VPC",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network offering id",
          "length": 255,
          "name": "networkofferingid",
          "related": "updateNetworkOffering,createNetworkOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID or VID of the network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "endipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the network",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the CIDR of IPv6 network, must be at least /64",
          "length": 255,
          "name": "ip6cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network ACL Id associated for the network",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the isolated private vlan for this network",
          "length": 255,
          "name": "isolatedpvlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the IPv6 network. Required for Shared networks and Isolated networks when it belongs to VPC",
          "length": 255,
          "name": "ip6gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask of the network. Required for Shared networks and Isolated networks when it belongs to VPC",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "Defines whether to allow subdomains to use networks dedicated to their parent domain(s). Should be used with aclType=Domain, defaulted to allow.subdomain.network.access global config if not specified",
          "length": 255,
          "name": "subdomainaccess",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the VPC network belongs to",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID for the network",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the Physical Network ID the network belongs to",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateNetwork,listNetworks",
      "response": [
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists projects and provides detailed information for listed projects",
      "isasync": false,
      "name": "listProjects",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list projects by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List projects by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list projects by project ID",
          "length": 255,
          "name": "id",
          "related": "updateProject,listProjects,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list projects by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "list projects by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateProject,createProject,listProjectAccounts,activateProject",
      "response": [
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all public ip addresses",
      "isasync": false,
      "name": "listPublicIpAddresses",
      "params": [
        {
          "description": "limits search results to allocated public IP addresses",
          "length": 255,
          "name": "allocatedonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only source nat ip addresses",
          "length": 255,
          "name": "issourcenat",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists all public IP addresses associated to the network specified",
          "length": 255,
          "name": "associatednetworkid",
          "related": "updateNetwork,listNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists ip address by id",
          "length": 255,
          "name": "id",
          "related": "listPublicIpAddresses,restartNetwork,associateIpAddress",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only static nat ip addresses",
          "length": 255,
          "name": "isstaticnat",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only ips used for load balancing",
          "length": 255,
          "name": "forloadbalancing",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List ips belonging to the VPC",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists all public IP addresses by Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists all public IP addresses by physical network id",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists all public IP addresses by VLAN ID",
          "length": 255,
          "name": "vlanid",
          "related": "listVlanIpRanges,createVlanIpRange,dedicatePublicIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the virtual network for the IP address",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists the specified IP address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "restartNetwork,associateIpAddress",
      "response": [
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Removes a load balancer rule association with global load balancer rule",
      "isasync": true,
      "name": "removeFromGlobalLoadBalancerRule",
      "params": [
        {
          "description": "The ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listGlobalLoadBalancerRules,createGlobalLoadBalancerRule,updateGlobalLoadBalancerRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list load balancer rules that will be assigned to gloabal load balacner rule",
          "length": 255,
          "name": "loadbalancerrulelist",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": true,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists site 2 site vpn gateways",
      "isasync": false,
      "name": "listVpnGateways",
      "params": [
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the vpn gateway",
          "length": 255,
          "name": "id",
          "related": "listVpnGateways,createVpnGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of vpc",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createVpnGateway",
      "response": [
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attaches a disk volume to a virtual machine.",
      "isasync": true,
      "name": "attachVolume",
      "params": [
        {
          "description": "the ID of the device to map the volume to within the guest OS. If no deviceId is passed in, the next available deviceId will be chosen. Possible values for a Linux OS are:* 1 - /dev/xvdb* 2 - /dev/xvdc* 4 - /dev/xvde* 5 - /dev/xvdf* 6 - /dev/xvdg* 7 - /dev/xvdh* 8 - /dev/xvdi* 9 - /dev/xvdj",
          "length": 255,
          "name": "deviceid",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,uploadVolume,createVolume,resizeVolume,updateVolume,detachVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "    the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "uploadVolume,createVolume,resizeVolume,updateVolume,detachVolume",
      "response": [
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resets the SSH Key for virtual machine. The virtual machine must be in a \"Stopped\" state. [async]",
      "isasync": true,
      "name": "resetSSHKeyForVirtualMachine",
      "params": [
        {
          "description": "name of the ssh key pair used to login to the virtual machine",
          "length": 255,
          "name": "keypair",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "attachIso,revertToVMSnapshot,detachIso,resetSSHKeyForVirtualMachine,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists autoscale policies.",
      "isasync": false,
      "name": "listAutoScalePolicies",
      "params": [
        {
          "description": "the ID of the autoscale policy",
          "length": 255,
          "name": "id",
          "related": "updateAutoScalePolicy,listAutoScalePolicies,createAutoScalePolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the condition of the policy",
          "length": 255,
          "name": "conditionid",
          "related": "listConditions",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the autoscale vm group",
          "length": 255,
          "name": "vmgroupid",
          "related": "createAutoScaleVmGroup,disableAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateAutoScalePolicy,createAutoScalePolicy",
      "response": [
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "name": "conditions",
          "type": "list"
        },
        {
          "description": "the autoscale policy ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "name": "duration",
          "type": "integer"
        },
        {
          "description": "the account owning the autoscale policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the autoscale policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "name": "quiettime",
          "type": "integer"
        },
        {
          "description": "the domain name of the autoscale policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id autoscale policy",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the autoscale policy",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an affinity/anti-affinity group",
      "isasync": true,
      "name": "createAffinityGroup",
      "params": [
        {
          "description": "domainId of the account owning the affinity group",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an account for the affinity group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the affinity group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "optional description of the affinity group",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "Type of the affinity group from the available affinity/anti-affinity group types",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listAffinityGroups",
      "response": [
        {
          "description": "the account owning the affinity group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the affinity group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the affinity group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "virtual machine Ids associated with this affinity group ",
          "name": "virtualmachineIds",
          "type": "list"
        },
        {
          "description": "the name of the affinity group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain name of the affinity group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the affinity group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deleting resource tag(s)",
      "isasync": true,
      "name": "deleteTags",
      "params": [
        {
          "description": "Delete tags for resource id(s)",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Delete tag by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Delete tags matching key/value pairs",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Deletes account from the project",
      "isasync": true,
      "name": "deleteAccountFromProject",
      "params": [
        {
          "description": "name of the account to be removed from the project",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        },
        {
          "description": "id of the project to remove the account from",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "List private gateways",
      "isasync": false,
      "name": "listPrivateGateways",
      "params": [
        {
          "description": "list private gateway by id",
          "length": 255,
          "name": "id",
          "related": "createPrivateGateway,listPrivateGateways",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list gateways by ip address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list gateways by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list gateways by vlan",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "list gateways by vpc",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createPrivateGateway",
      "response": [
        {
          "description": "the id of the private gateway",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Souce Nat enable status",
          "name": "sourcenatsupported",
          "type": "boolean"
        },
        {
          "description": "the project name of the private gateway",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the private gateway",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "zone id of the private gateway",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the account associated with the private gateway",
          "name": "account",
          "type": "string"
        },
        {
          "description": "State of the gateway, can be Creating, Ready, Deleting",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the private gateway's ip address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "ACL Id set for private gateway",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the domain associated with the private gateway",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the private gateway's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the vlan of the private gateway",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "VPC the private gateaway belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the name of the zone the private gateway belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the private gateway",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available networks.",
      "isasync": false,
      "name": "listNetworks",
      "params": [
        {
          "description": "the Zone ID of the network",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if network is system, false otherwise",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "type of the traffic",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "List networks by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the network belongs to vpc",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "length": 255,
          "name": "canusefordeploy",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the type of the network. Supported values are: Isolated and Shared",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks by ACL (access control list) type. Supported values are Account and Domain",
          "length": 255,
          "name": "acltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks by physical network id",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list networks by id",
          "length": 255,
          "name": "id",
          "related": "updateNetwork,listNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list networks supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list networks by restartRequired",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if need to list only networks which support specifying ip ranges",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateNetwork",
      "response": [
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a profile that contains information about the virtual machine which will be provisioned automatically by autoscale feature.",
      "isasync": true,
      "name": "createAutoScaleVmProfile",
      "params": [
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId of the auto deployed virtual machine",
          "length": 255,
          "name": "otherdeployparams",
          "required": false,
          "type": "string"
        },
        {
          "description": "availability zone for the auto deployed virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "length": 255,
          "name": "destroyvmgraceperiod",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the service offering of the auto deployed virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "length": 255,
          "name": "autoscaleuserid",
          "related": "disableUser,updateUser,enableUser,lockUser,createUser,getUser,listUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the template of the auto deployed virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161",
          "length": 255,
          "name": "counterparam",
          "required": false,
          "type": "map"
        }
      ],
      "related": "updateAutoScaleVmProfile,listAutoScaleVmProfiles",
      "response": [
        {
          "description": "the template to be used while deploying a virtual machine",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the autoscale vm profile ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the service offering to be used while deploying a virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the availability zone to be used while deploying a virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "name": "destroyvmgraceperiod",
          "type": "integer"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "name": "autoscaleuserid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
          "name": "otherdeployparams",
          "type": "string"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a security group",
      "isasync": false,
      "name": "createSecurityGroup",
      "params": [
        {
          "description": "the description of the security group",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the security group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Create security group for project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the security group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listSecurityGroups",
      "response": [
        {
          "description": "the list of ingress rules associated with the security group",
          "name": "ingressrule",
          "response": [
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account owning the security group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of egress rules associated with the security group",
          "name": "egressrule",
          "response": [
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the domain ID of the security group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the domain name of the security group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the security group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the description of the security group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the name of the security group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Create a new keypair and returns the private key",
      "isasync": false,
      "name": "createSSHKeyPair",
      "params": [
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listSSHKeyPairs",
      "response": [
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Private key",
          "name": "privatekey",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a firewall rule",
      "isasync": true,
      "name": "deleteFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "lists all available apis on the server, provided by the Api Discovery plugin",
      "isasync": false,
      "name": "listApis",
      "params": [
        {
          "description": "API name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "version of CloudStack the api was introduced in",
          "name": "since",
          "type": "string"
        },
        {
          "description": "comma separated related apis",
          "name": "related",
          "type": "string"
        },
        {
          "description": "true if api is asynchronous",
          "name": "isasync",
          "type": "boolean"
        },
        {
          "description": "the list params the api accepts",
          "name": "params",
          "response": [
            {
              "description": "comma separated related apis to get the parameter",
              "name": "related",
              "type": "string"
            },
            {
              "description": "version of CloudStack the api was introduced in",
              "name": "since",
              "type": "string"
            },
            {
              "description": "parameter type",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if this parameter is required for the api request",
              "name": "required",
              "type": "boolean"
            },
            {
              "description": "the name of the api parameter",
              "name": "name",
              "type": "string"
            },
            {
              "description": "description of the api parameter",
              "name": "description",
              "type": "string"
            },
            {
              "description": "length of the parameter",
              "name": "length",
              "type": "int"
            }
          ],
          "type": "set"
        },
        {
          "description": "description of the api",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the name of the api command",
          "name": "name",
          "type": "string"
        },
        {
          "description": "response field type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "api response fields",
          "name": "response",
          "response": [
            {
              "description": "description of the api response field",
              "name": "description",
              "type": "string"
            },
            {
              "description": "response field type",
              "name": "type",
              "type": "string"
            },
            {
              "description": "api response fields",
              "name": "response",
              "type": "set"
            },
            {
              "description": "the name of the api response field",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        }
      ],
      "since": "4.1.0"
    },
    {
      "description": "Deletes a project",
      "isasync": true,
      "name": "deleteProject",
      "params": [
        {
          "description": "id of the project to be deleted",
          "length": 255,
          "name": "id",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Assigns secondary IP to NIC.",
      "isasync": true,
      "name": "removeIpFromNic",
      "params": [
        {
          "description": "the ID of the secondary ip address to nic",
          "length": 255,
          "name": "id",
          "related": "addIpToNic",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an ip forwarding rule",
      "isasync": true,
      "name": "deleteIpForwardingRule",
      "params": [
        {
          "description": "the id of the forwarding rule",
          "length": 255,
          "name": "id",
          "related": "createIpForwardingRule,createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a global load balancer rule",
      "isasync": true,
      "name": "createGlobalLoadBalancerRule",
      "params": [
        {
          "description": "the account associated with the global load balancer. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "region where the global load balancer is going to be created.",
          "length": 255,
          "name": "regionid",
          "related": "addRegion,listRegions",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the domain ID associated with the load balancer",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "session sticky method (sourceip) if not specified defaults to sourceip",
          "length": 255,
          "name": "gslbstickysessionmethodname",
          "required": false,
          "type": "string"
        },
        {
          "description": "GSLB service type (tcp, udp)",
          "length": 255,
          "name": "gslbservicetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "domain name for the GSLB service.",
          "length": 255,
          "name": "gslbdomainname",
          "required": true,
          "type": "string"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (roundrobin, leastconn, proximity) that method is used to distribute traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'",
          "length": 255,
          "name": "gslblbmethod",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
      "response": [
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "DNS domain name given for the global load balancer",
          "name": "gslbdomainname",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "GSLB service type",
          "name": "gslbservicetype",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "global load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the description of the global load balancer rule",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Region Id in which global load balancer is created",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "Load balancing method used for the global load balancer",
          "name": "gslblbmethod",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "List of load balancer rules that are part of GSLB rule",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "the load balancer rule ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the load balancer rule",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the cidr list to forward traffic from",
              "name": "cidrlist",
              "type": "string"
            },
            {
              "description": "the name of the load balancer",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the public ip address id",
              "name": "publicipid",
              "type": "string"
            },
            {
              "description": "the project id of the load balancer",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the id of the zone the rule belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the description of the load balancer",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the public port",
              "name": "publicport",
              "type": "string"
            },
            {
              "description": "the public ip address",
              "name": "publicip",
              "type": "string"
            },
            {
              "description": "the state of the rule",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the load balancer algorithm (source, roundrobin, leastconn)",
              "name": "algorithm",
              "type": "string"
            },
            {
              "description": "the domain of the load balancer rule",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account of the load balancer rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with load balancer",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the project name of the load balancer",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the private port",
              "name": "privateport",
              "type": "string"
            },
            {
              "description": "the id of the guest network the lb rule belongs to",
              "name": "networkid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "name of the global load balancer rule",
          "name": "name",
          "type": "string"
        },
        {
          "description": "session persistence method used for the global load balancer",
          "name": "gslbstickysessionmethodname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resizes a volume",
      "isasync": true,
      "name": "resizeVolume",
      "params": [
        {
          "description": "new disk offering id",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,listDiskOfferings,updateDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "uploadVolume,createVolume,resizeVolume,detachVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "New volume size in G",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "Verify OK to Shrink",
          "length": 255,
          "name": "shrinkok",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "uploadVolume,createVolume,detachVolume",
      "response": [
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        }
      ]
    },
    {
      "description": "List registered keypairs",
      "isasync": false,
      "name": "listSSHKeyPairs",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "A public key fingerprint to look for",
          "length": 255,
          "name": "fingerprint",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "A key pair name to look for",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Private key",
          "name": "privatekey",
          "type": "string"
        },
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a static route",
      "isasync": true,
      "name": "createStaticRoute",
      "params": [
        {
          "description": "the gateway id we are creating static route for",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "static route cidr",
          "length": 255,
          "name": "cidr",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listStaticRoutes",
      "response": [
        {
          "description": "the list of resource tags associated with static route",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "VPC the static route belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain associated with the static route",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the static route",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the static route",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account associated with the static route",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of static route",
          "name": "id",
          "type": "string"
        },
        {
          "description": "static route CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the project id of the static route",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "VPC gateway the route is created for",
          "name": "gatewayid",
          "type": "string"
        },
        {
          "description": "the state of the static route",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a global load balancer rule.",
      "isasync": true,
      "name": "deleteGlobalLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Activates a project",
      "isasync": true,
      "name": "activateProject",
      "params": [
        {
          "description": "id of the project to be modified",
          "length": 255,
          "name": "id",
          "related": "updateProject,createProject,listProjectAccounts,activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateProject,createProject,listProjectAccounts",
      "response": [
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates snapshot for a vm.",
      "isasync": true,
      "name": "createVMSnapshot",
      "params": [
        {
          "description": "The discription of the snapshot",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "snapshot memory if true",
          "length": 255,
          "name": "snapshotmemory",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The display name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listVMSnapshot",
      "response": [
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "VM Snapshot type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the parent ID of the vm snapshot",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "the ID of the vm snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "indiates if this is current snapshot",
          "name": "current",
          "type": "boolean"
        },
        {
          "description": "the name of the vm snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone ID of the vm snapshot",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the description of the vm snapshot",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the display name of the vm snapshot",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the vm ID of the vm snapshot",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the state of the vm snapshot",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the create date of the vm snapshot",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the parent displayName of the vm snapshot",
          "name": "parentName",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Enables static nat for given ip address",
      "isasync": false,
      "name": "enableStaticNat",
      "params": [
        {
          "description": "the public IP address id for which static nat feature is being enabled",
          "length": 255,
          "name": "ipaddressid",
          "related": "restartNetwork,associateIpAddress",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine for enabling static nat feature",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The network of the vm the static nat will be enabled for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "VM guest nic Secondary ip address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an ip forwarding rule",
      "isasync": true,
      "name": "createIpForwardingRule",
      "params": [
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the public IP address id of the forwarding rule, already associated via associateIp",
          "length": 255,
          "name": "ipaddressid",
          "related": "restartNetwork,associateIpAddress",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the end port for the rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the start port for the rule",
          "length": 255,
          "name": "startport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. Has value true by default",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createPortForwardingRule,updatePortForwardingRule,listPortForwardingRules,listIpForwardingRules",
      "response": [
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Regions",
      "isasync": false,
      "name": "listRegions",
      "params": [
        {
          "description": "List Region by region ID.",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List Region by region name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addRegion",
      "response": [
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "portableipserviceenabled",
          "type": "boolean"
        },
        {
          "description": "true if GSLB service is enabled in the region, false otherwise",
          "name": "gslbserviceenabled",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all network ACLs",
      "isasync": false,
      "name": "listNetworkACLLists",
      "params": [
        {
          "description": "list network ACLs by specified name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network ACLs by Vpc Id",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network ACLs by network Id",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists network ACL with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createNetworkACLList",
      "response": [
        {
          "description": "the Name of the ACL",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the ACL",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Id of the VPC this ACL is associated with",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "Description of the ACL",
          "name": "description",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists capabilities",
      "isasync": false,
      "name": "listCapabilities",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "maximum size that can be specified when create disk from disk offering with custom size",
          "name": "customdiskofferingmaxsize",
          "type": "long"
        },
        {
          "description": "Max allowed number of api requests within the specified interval",
          "name": "apilimitmax",
          "type": "integer"
        },
        {
          "description": "true if region supports elastic load balancer on basic zones",
          "name": "supportELB",
          "type": "string"
        },
        {
          "description": "true if user and domain admins can set templates to be shared, false otherwise",
          "name": "userpublictemplateenabled",
          "type": "boolean"
        },
        {
          "description": "true if region wide secondary is enabled, false otherwise",
          "name": "regionsecondaryenabled",
          "type": "boolean"
        },
        {
          "description": "If invitation confirmation is required when add account to project",
          "name": "projectinviterequired",
          "type": "boolean"
        },
        {
          "description": "true if snapshot is supported for KVM host, false otherwise",
          "name": "KVMsnapshotenabled",
          "type": "boolean"
        },
        {
          "description": "version of the cloud stack",
          "name": "cloudstackversion",
          "type": "string"
        },
        {
          "description": "true if regular user is allowed to create projects",
          "name": "allowusercreateprojects",
          "type": "boolean"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "time interval (in seconds) to reset api count",
          "name": "apilimitinterval",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates a VPC",
      "isasync": true,
      "name": "updateVPC",
      "params": [
        {
          "description": "the display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "length": 255,
          "name": "id",
          "related": "listVPCs,restartVPC,updateVPC,createVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the VPC",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listVPCs,restartVPC,createVPC",
      "response": [
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    },
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates an existing autoscale vm profile.",
      "isasync": true,
      "name": "updateAutoScaleVmProfile",
      "params": [
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "length": 255,
          "name": "destroyvmgraceperiod",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "length": 255,
          "name": "autoscaleuserid",
          "related": "disableUser,updateUser,enableUser,lockUser,createUser,getUser,listUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the template of the auto deployed virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161",
          "length": 255,
          "name": "counterparam",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the autoscale vm profile",
          "length": 255,
          "name": "id",
          "related": "updateAutoScaleVmProfile,listAutoScaleVmProfiles",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listAutoScaleVmProfiles",
      "response": [
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
          "name": "otherdeployparams",
          "type": "string"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "name": "autoscaleuserid",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "name": "destroyvmgraceperiod",
          "type": "integer"
        },
        {
          "description": "the service offering to be used while deploying a virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the autoscale vm profile ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the availability zone to be used while deploying a virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the template to be used while deploying a virtual machine",
          "name": "templateid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Lists project's accounts",
      "isasync": false,
      "name": "listProjectAccounts",
      "params": [
        {
          "description": "list accounts of the project by role",
          "length": 255,
          "name": "role",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject,listProjectAccounts",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "list accounts of the project by account name",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateProject,createProject",
      "response": [
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates a port forwarding rule.  Only the private port and the virtual machine can be updated.",
      "isasync": true,
      "name": "updatePortForwardingRule",
      "params": [
        {
          "description": "the private IP address of the port forwarding rule",
          "length": 255,
          "name": "privateip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the public port of the port forwarding rule",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine for the port forwarding rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,deployVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the protocol for the port fowarding rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "restartNetwork,associateIpAddress",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the private port of the port forwarding rule",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "string"
        }
      ],
      "related": "createPortForwardingRule,listPortForwardingRules,listIpForwardingRules",
      "response": [
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all port forwarding rules for an IP address.",
      "isasync": false,
      "name": "listPortForwardingRules",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of IP address of the port forwarding services",
          "length": 255,
          "name": "ipaddressid",
          "related": "restartNetwork,associateIpAddress",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createPortForwardingRule,listIpForwardingRules",
      "response": [
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        }
      ]
    },
    {
      "description": "List template visibility and all accounts that have permissions to view this template.",
      "isasync": false,
      "name": "listTemplatePermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsoPermissions,listTemplatePermissions",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsoPermissions",
      "response": [
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of projects the template is available for",
          "name": "projectids",
          "type": "list"
        },
        {
          "description": "the list of accounts the template is available for",
          "name": "account",
          "type": "list"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Retrieves the current status of asynchronous job.",
      "isasync": false,
      "name": "queryAsyncJobResult",
      "params": [
        {
          "description": "the ID of the asychronous job",
          "length": 255,
          "name": "jobid",
          "related": "queryAsyncJobResult,listAsyncJobs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listAsyncJobs",
      "response": [
        {
          "description": "the result type",
          "name": "jobresulttype",
          "type": "string"
        },
        {
          "description": "the async command executed",
          "name": "cmd",
          "type": "string"
        },
        {
          "description": "the instance/entity object related to the job",
          "name": "jobinstancetype",
          "type": "string"
        },
        {
          "description": "the progress information of the PENDING job",
          "name": "jobprocstatus",
          "type": "integer"
        },
        {
          "description": "the user that executed the async command",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the unique ID of the instance/entity object related to the job",
          "name": "jobinstanceid",
          "type": "string"
        },
        {
          "description": "the account that executed the async command",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the result code for the job",
          "name": "jobresultcode",
          "type": "integer"
        },
        {
          "description": "the result reason",
          "name": "jobresult",
          "type": "responseobject"
        },
        {
          "description": "the current job status-should be 0 for PENDING",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "  the created date of the job",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates a Load Balancer",
      "isasync": true,
      "name": "createLoadBalancer",
      "params": [
        {
          "description": "the source port the network traffic will be load balanced from",
          "length": 255,
          "name": "sourceport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the load balancer scheme. Supported value in this release is Internal",
          "length": 255,
          "name": "scheme",
          "required": true,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": true,
          "type": "string"
        },
        {
          "description": "The guest network the Load Balancer will be created for",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the network id of the source ip address",
          "length": 255,
          "name": "sourceipaddressnetworkid",
          "related": "updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name of the Load Balancer",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the description of the Load Balancer",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "the TCP port of the virtual machine where the network traffic will be load balanced to",
          "length": 255,
          "name": "instanceport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the source ip address the network traffic will be load balanced from",
          "length": 255,
          "name": "sourceipaddress",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the list of rules associated with the Load Balancer",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "source port of the load balancer rule",
              "name": "sourceport",
              "type": "integer"
            },
            {
              "description": "instance port of the load balancer rule",
              "name": "instanceport",
              "type": "integer"
            },
            {
              "description": "the state of the load balancer rule",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Load Balancer source ip",
          "name": "sourceipaddress",
          "type": "string"
        },
        {
          "description": "Load Balancer network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the domain ID of the Load Balancer",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "Load Balancer source ip network id",
          "name": "sourceipaddressnetworkid",
          "type": "string"
        },
        {
          "description": "the account of the Load Balancer",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain of the Load Balancer",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the description of the Load Balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the Load Balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of instances associated with the Load Balancer",
          "name": "loadbalancerinstance",
          "response": [
            {
              "description": "the instance ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the instance",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ip address of the instance",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the state of the instance",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Load Balancer ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the Load Balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the Load Balancer",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the Load Balancer",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
      "isasync": true,
      "name": "deployVirtualMachine",
      "params": [
        {
          "description": "comma separated list of security groups names that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
          "length": 255,
          "name": "securitygroupnames",
          "related": "listSecurityGroups",
          "required": false,
          "type": "list"
        },
        {
          "description": "the ID of the template for the virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Mutually exclusive with affinitygroupnames parameter",
          "length": 255,
          "name": "affinitygroupids",
          "related": "listAffinityGroups",
          "required": false,
          "type": "list"
        },
        {
          "description": "true if network offering supports specifying ip ranges; defaulted to true if not specified",
          "length": 255,
          "name": "startvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional field, whether to the display the vm to the end user or not.",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "since": "4.2",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering for the virtual machine. If the template is of ISO format, the diskOfferingId is for the root disk volume. Otherwise this parameter is used to indicate the offering for the data disk volume. If the templateId parameter passed is from a Template object, the diskOfferingId refers to a DATA Disk Volume created. If the templateId parameter passed is from an ISO object, the diskOfferingId refers to a ROOT Disk Volume created.",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,listDiskOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the hypervisor on which to deploy the virtual machine",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional keyboard device type for the virtual machine. valid value can be one of de,de-ch,es,fi,fr,fr-be,fr-ch,is,it,jp,nl-be,no,pt,uk,us",
          "length": 255,
          "name": "keyboard",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "host name for the virtual machine",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "ip to network mapping. Can't be specified with networkIds parameter. Example: iptonetworklist[0].ip=10.10.10.11&iptonetworklist[0].ipv6=fc00:1234:5678::abcd&iptonetworklist[0].networkid=uuid - requests to use ip 10.10.10.11 in network id=uuid",
          "length": 255,
          "name": "iptonetworklist",
          "required": false,
          "type": "map"
        },
        {
          "description": "list of network ids used by virtual machine. Can't be specified with ipToNetworkList parameter",
          "length": 255,
          "name": "networkids",
          "related": "updateNetwork",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.",
          "length": 32768,
          "name": "userdata",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the ssh key pair used to login to the virtual machine",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "Deploy vm for the project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ip address for default vm's network",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional user generated name for the virtual machine",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ipv6 address for default vm's network",
          "length": 255,
          "name": "ip6address",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine.Mutually exclusive with affinitygroupids parameter",
          "length": 255,
          "name": "affinitygroupnames",
          "related": "listAffinityGroups",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the arbitrary size for the DATADISK volume. Mutually exclusive with diskOfferingId",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "hostid",
          "related": "updateHost,prepareHostForMaintenance,addHost,listHosts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "comma separated list of security groups id that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter",
          "length": 255,
          "name": "securitygroupids",
          "related": "listSecurityGroups",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional group for the virtual machine",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "availability zone for the virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a particular egress rule from this security group",
      "isasync": true,
      "name": "revokeSecurityGroupEgress",
      "params": [
        {
          "description": "The ID of the egress rule",
          "length": 255,
          "name": "id",
          "related": "authorizeSecurityGroupEgress",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a Network ACL for the given VPC",
      "isasync": true,
      "name": "createNetworkACLList",
      "params": [
        {
          "description": "Id of the VPC associated with this network ACL List",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,createVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Description of the network ACL List",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "Name of the network ACL List",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Name of the ACL",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Id of the VPC this ACL is associated with",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "Description of the ACL",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the ACL",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes a condition",
      "isasync": true,
      "name": "deleteCondition",
      "params": [
        {
          "description": "the ID of the condition.",
          "length": 255,
          "name": "id",
          "related": "listConditions",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a port forwarding rule",
      "isasync": true,
      "name": "createPortForwardingRule",
      "params": [
        {
          "description": "the ending port of port forwarding rule's private port range",
          "length": 255,
          "name": "privateendport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "VM guest nic Secondary ip address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network of the vm the Port Forwarding rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "length": 255,
          "name": "publicendport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. If not specified 1) defaulted to false when PF rule is being created for VPC guest network 2) in all other cases defaulted to true",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the protocol for the port fowarding rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "restartNetwork,associateIpAddress",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine for the port forwarding rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listIpForwardingRules",
      "response": [
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a egress firewall rule for a given network ",
      "isasync": true,
      "name": "createEgressFirewallRule",
      "params": [
        {
          "description": "the network id of the port forwarding rule",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "type of firewallrule: system/user",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the starting port of firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listFirewallRules,createFirewallRule,listEgressFirewallRules",
      "response": [
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "string"
        }
      ]
    },
    {
      "description": "Assign load balancer rule or list of load balancer rules to a global load balancer rules.",
      "isasync": true,
      "name": "assignToGlobalLoadBalancerRule",
      "params": [
        {
          "description": "Map of LB rule id's and corresponding weights (between 1-100) in the GSLB rule, if not specified weight of a LB rule is defaulted to 1. Specified as 'gslblbruleweightsmap[0].loadbalancerid=UUID&gslblbruleweightsmap[0].weight=10'",
          "length": 255,
          "name": "gslblbruleweightsmap",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list load balancer rules that will be assigned to gloabal load balacner rule",
          "length": 255,
          "name": "loadbalancerrulelist",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all supported OS categories for this cloud.",
      "isasync": false,
      "name": "listOsCategories",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list os category by name",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "3.0.1",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Os category by id",
          "length": 255,
          "name": "id",
          "related": "listOsCategories",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the OS category",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the OS category",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates ACL Item with specified Id",
      "isasync": true,
      "name": "updateNetworkACLItem",
      "params": [
        {
          "description": "The network of the vm the ACL will be created for",
          "length": 255,
          "name": "number",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cidr list to allow traffic from/to",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "scl entry action, allow or deny",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending port of ACL",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the starting port of ACL",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the traffic type for the ACL,can be Ingress or Egress, defaulted to Ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the network ACL Item",
          "length": 255,
          "name": "id",
          "related": "createNetworkACL,updateNetworkACLItem",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createNetworkACL",
      "response": [
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a vm group",
      "isasync": false,
      "name": "createInstanceGroup",
      "params": [
        {
          "description": "the account of the instance group. The account parameter must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "The project of the instance group",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID of account owning the instance group",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateInstanceGroup",
      "response": [
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the id of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Assigns secondary IP to NIC",
      "isasync": true,
      "name": "addIpToNic",
      "params": [
        {
          "description": "Secondary IP Address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the nic to which you want to assign private IP",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Secondary IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ID of the secondary private IP addr",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the vm",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ID of the network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the nic",
          "name": "nicid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a Network ACL",
      "isasync": true,
      "name": "deleteNetworkACLList",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists snapshot policies.",
      "isasync": false,
      "name": "listSnapshotPolicies",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "uploadVolume,createVolume,detachVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createSnapshotPolicy",
      "response": [
        {
          "description": "the interval type of the snapshot policy",
          "name": "intervaltype",
          "type": "short"
        },
        {
          "description": "the time zone of the snapshot policy",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the ID of the snapshot policy",
          "name": "id",
          "type": "string"
        },
        {
          "description": "time the snapshot is scheduled to be taken.",
          "name": "schedule",
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "maximum number of snapshots retained",
          "name": "maxsnaps",
          "type": "int"
        }
      ]
    },
    {
      "description": "Deletes a keypair by name",
      "isasync": false,
      "name": "deleteSSHKeyPair",
      "params": [
        {
          "description": "the account associated with the keypair. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the project associated with keypair",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the keypair",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,createDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes snapshot policies for the account.",
      "isasync": false,
      "name": "deleteSnapshotPolicies",
      "params": [
        {
          "description": "the Id of the snapshot policy",
          "length": 255,
          "name": "id",
          "related": "createSnapshotPolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list of snapshots policy IDs separated by comma",
          "length": 255,
          "name": "ids",
          "related": "createSnapshotPolicy",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists load balancer HealthCheck policies.",
      "isasync": false,
      "name": "listLBHealthCheckPolicies",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createLBHealthCheckPolicy",
      "response": [
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "A command to list events.",
      "isasync": false,
      "name": "listEvents",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the duration of the event",
          "length": 255,
          "name": "duration",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the start date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the ID of the event",
          "length": 255,
          "name": "id",
          "related": "listEvents",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the event level (INFO, WARN, ERROR)",
          "length": 255,
          "name": "level",
          "required": false,
          "type": "string"
        },
        {
          "description": "the end date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the time the event was entered",
          "length": 255,
          "name": "entrytime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the event type (see event types)",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the id of the account's domain",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date the event was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the type of the event (see event types)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "whether the event is parented",
          "name": "parentid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the event level (INFO, WARN, ERROR)",
          "name": "level",
          "type": "string"
        },
        {
          "description": "the ID of the event",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account name for the account that owns the object being acted on in the event (e.g. the owner of the virtual machine, ip address, or security group)",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the user who performed the action (can be different from the account if an admin is performing an action for a user, e.g. starting/stopping a user's virtual machine)",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the name of the account's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the event",
          "name": "state",
          "type": "state"
        },
        {
          "description": "a brief description of the event",
          "name": "description",
          "type": "string"
        }
      ]
    },
    {
      "description": "Delete site to site vpn gateway",
      "isasync": true,
      "name": "deleteVpnGateway",
      "params": [
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
      "isasync": true,
      "name": "createAutoScaleVmGroup",
      "params": [
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "length": 255,
          "name": "maxmembers",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "length": 255,
          "name": "minmembers",
          "required": true,
          "type": "integer"
        },
        {
          "description": "list of scaledown autoscale policies",
          "length": 255,
          "name": "scaledownpolicyids",
          "related": "updateAutoScalePolicy,createAutoScalePolicy",
          "required": true,
          "type": "list"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "length": 255,
          "name": "interval",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list of scaleup autoscale policies",
          "length": 255,
          "name": "scaleuppolicyids",
          "related": "updateAutoScalePolicy,createAutoScalePolicy",
          "required": true,
          "type": "list"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "length": 255,
          "name": "vmprofileid",
          "related": "listAutoScaleVmProfiles",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "disableAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup",
      "response": [
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        }
      ]
    },
    {
      "description": "Creates a Load Balancer healthcheck policy ",
      "isasync": true,
      "name": "createLBHealthCheckPolicy",
      "params": [
        {
          "description": "Time to wait when receiving a response from the health check (2sec - 60 sec)",
          "length": 255,
          "name": "responsetimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Number of consecutive health check failures before declaring an instance unhealthy",
          "length": 255,
          "name": "unhealthythreshold",
          "required": false,
          "type": "integer"
        },
        {
          "description": "HTTP Ping Path",
          "length": 255,
          "name": "pingpath",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the description of the load balancer HealthCheck policy",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "Amount of time between health checks (1 sec - 20940 sec)",
          "length": 255,
          "name": "intervaltime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Number of consecutive health check success before declaring an instance healthy",
          "length": 255,
          "name": "healthythreshold",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Archive one or more events.",
      "isasync": false,
      "name": "archiveEvents",
      "params": [
        {
          "description": "start date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "end date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the IDs of the events",
          "length": 255,
          "name": "ids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "archive by event type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists projects and provides detailed information for listed projects",
      "isasync": false,
      "name": "listProjectInvitations",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list invitations by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list invitations by id",
          "length": 255,
          "name": "id",
          "related": "listProjectInvitations",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if true, list only active invitations - having Pending state and ones that are not timed out yet",
          "length": 255,
          "name": "activeonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by project id",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the id of the invitation",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the email the invitation was sent to",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the invitation state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes an ISO file.",
      "isasync": true,
      "name": "deleteIso",
      "params": [
        {
          "description": "the ID of the zone of the ISO file. If not specified, the ISO will be deleted from all the zones",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates site to site vpn customer gateway",
      "isasync": true,
      "name": "createVpnCustomerGateway",
      "params": [
        {
          "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "esplifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "If DPD is enabled for VPN connection",
          "length": 255,
          "name": "dpd",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "ESP policy of the customer gateway",
          "length": 255,
          "name": "esppolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "length": 255,
          "name": "ikepolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "name of this customer gateway",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "length": 255,
          "name": "ipsecpsk",
          "required": true,
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "length": 255,
          "name": "cidrlist",
          "required": true,
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "ikelifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "the account associated with the gateway. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listVpnCustomerGateways,updateVpnCustomerGateway",
      "response": [
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a autoscale policy.",
      "isasync": true,
      "name": "deleteAutoScalePolicy",
      "params": [
        {
          "description": "the ID of the autoscale policy",
          "length": 255,
          "name": "id",
          "related": "updateAutoScalePolicy,createAutoScalePolicy",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all available disk offerings.",
      "isasync": false,
      "name": "listDiskOfferings",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "name of the disk offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "createDiskOffering,listDiskOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the domain of the disk offering.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createDiskOffering",
      "response": [
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Detaches a disk volume from a virtual machine.",
      "isasync": true,
      "name": "detachVolume",
      "params": [
        {
          "description": "the device ID on the virtual machine where volume is detached from",
          "length": 255,
          "name": "deviceid",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "uploadVolume,createVolume,detachVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine where the volume is detached from",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "uploadVolume,createVolume",
      "response": [
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Deletes a Network ACL",
      "isasync": true,
      "name": "deleteNetworkACL",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "createNetworkACL",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all available snapshots for the account.",
      "isasync": false,
      "name": "listSnapshots",
      "params": [
        {
          "description": "lists snapshot by snapshot ID",
          "length": 255,
          "name": "id",
          "related": "listSnapshots,createSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list snapshots by zone id",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY.",
          "length": 255,
          "name": "intervaltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists snapshot by snapshot name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "valid values are MANUAL or RECURRING.",
          "length": 255,
          "name": "snapshottype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "uploadVolume,createVolume",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createSnapshot",
      "response": [
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with snapshot",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a VPC",
      "isasync": true,
      "name": "deleteVPC",
      "params": [
        {
          "description": "the ID of the VPC",
          "length": 255,
          "name": "id",
          "related": "listVPCs,restartVPC,createVPC",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes security group",
      "isasync": false,
      "name": "deleteSecurityGroup",
      "params": [
        {
          "description": "the project of the security group",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID of account owning the security group",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account of the security group. Must be specified with domain ID",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with id parameter",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with name parameter",
          "length": 255,
          "name": "id",
          "related": "listSecurityGroups",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List the counters",
      "isasync": false,
      "name": "listCounters",
      "params": [
        {
          "description": "ID of the Counter.",
          "length": 255,
          "name": "id",
          "related": "listCounters,createCounter",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Name of the counter.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Source of the counter.",
          "length": 255,
          "name": "source",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createCounter",
      "response": [
        {
          "description": "Value in case of snmp or other specific counters.",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the id of the Counter",
          "name": "id",
          "type": "string"
        },
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Name of the counter.",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Source of the counter.",
          "name": "source",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates load balancer",
      "isasync": true,
      "name": "updateLoadBalancerRule",
      "params": [
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the load balancer rule to update",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listLoadBalancerRules,createLoadBalancerRule",
      "response": [
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a template from the system. All virtual machines using the deleted template will not be affected.",
      "isasync": true,
      "name": "deleteTemplate",
      "params": [
        {
          "description": "the ID of zone of the template",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the template",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,registerTemplate,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List resource tag(s)",
      "isasync": false,
      "name": "listTags",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by resource id",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by value",
          "length": 255,
          "name": "value",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by customer name",
          "length": 255,
          "name": "customer",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by key",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listResourceDetails",
      "response": [
        {
          "description": "id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "the project id the tag belongs to",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account associated with the tag",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the tag",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "resource type",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the domain associated with the tag",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name where tag belongs to",
          "name": "project",
          "type": "string"
        },
        {
          "description": "tag value",
          "name": "value",
          "type": "string"
        },
        {
          "description": "customer associated with the tag",
          "name": "customer",
          "type": "string"
        },
        {
          "description": "tag key name",
          "name": "key",
          "type": "string"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Delete site to site vpn customer gateway",
      "isasync": true,
      "name": "deleteVpnCustomerGateway",
      "params": [
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "listVpnCustomerGateways,updateVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List iso visibility and all accounts that have permissions to view this iso.",
      "isasync": false,
      "name": "listIsoPermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsoPermissions",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of accounts the template is available for",
          "name": "account",
          "type": "list"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of projects the template is available for",
          "name": "projectids",
          "type": "list"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates an existing autoscale policy.",
      "isasync": true,
      "name": "updateAutoScalePolicy",
      "params": [
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "length": 255,
          "name": "quiettime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "length": 255,
          "name": "duration",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the autoscale policy",
          "length": 255,
          "name": "id",
          "related": "updateAutoScalePolicy,createAutoScalePolicy",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "length": 255,
          "name": "conditionids",
          "related": "listConditions",
          "required": false,
          "type": "list"
        }
      ],
      "related": "createAutoScalePolicy",
      "response": [
        {
          "description": "the account owning the autoscale policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the autoscale policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the autoscale policy ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "name": "quiettime",
          "type": "integer"
        },
        {
          "description": "the project id autoscale policy",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the autoscale policy",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "name": "conditions",
          "type": "list"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "name": "duration",
          "type": "integer"
        },
        {
          "description": "the domain ID of the autoscale policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "name": "action",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates site to site vpn local gateway",
      "isasync": true,
      "name": "createVpnGateway",
      "params": [
        {
          "description": "public ip address id of the vpn gateway",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,createVPC",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all pending asynchronous jobs for the account.",
      "isasync": false,
      "name": "listAsyncJobs",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the start date of the async job",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "tzdate"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the progress information of the PENDING job",
          "name": "jobprocstatus",
          "type": "integer"
        },
        {
          "description": "  the created date of the job",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the unique ID of the instance/entity object related to the job",
          "name": "jobinstanceid",
          "type": "string"
        },
        {
          "description": "the result code for the job",
          "name": "jobresultcode",
          "type": "integer"
        },
        {
          "description": "the result reason",
          "name": "jobresult",
          "type": "responseobject"
        },
        {
          "description": "the current job status-should be 0 for PENDING",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the async command executed",
          "name": "cmd",
          "type": "string"
        },
        {
          "description": "the instance/entity object related to the job",
          "name": "jobinstancetype",
          "type": "string"
        },
        {
          "description": "the account that executed the async command",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the user that executed the async command",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the result type",
          "name": "jobresulttype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a autoscale vm group.",
      "isasync": true,
      "name": "deleteAutoScaleVmGroup",
      "params": [
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "disableAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists remote access vpns",
      "isasync": false,
      "name": "listRemoteAccessVpns",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "restartNetwork,associateIpAddress",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createRemoteAccessVpn",
      "response": [
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "update global load balancer rules.",
      "isasync": true,
      "name": "updateGlobalLoadBalancerRule",
      "params": [
        {
          "description": "session sticky method (sourceip) if not specified defaults to sourceip",
          "length": 255,
          "name": "gslbstickysessionmethodname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "load balancer algorithm (roundrobin, leastconn, proximity) that is used to distributed traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'",
          "length": 255,
          "name": "gslblbmethod",
          "required": false,
          "type": "string"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listGlobalLoadBalancerRules",
      "response": [
        {
          "description": "DNS domain name given for the global load balancer",
          "name": "gslbdomainname",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "GSLB service type",
          "name": "gslbservicetype",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Region Id in which global load balancer is created",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "List of load balancer rules that are part of GSLB rule",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "the list of resource tags associated with load balancer",
              "name": "tags",
              "response": [
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the domain ID of the load balancer rule",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the load balancer algorithm (source, roundrobin, leastconn)",
              "name": "algorithm",
              "type": "string"
            },
            {
              "description": "the description of the load balancer",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the public ip address id",
              "name": "publicipid",
              "type": "string"
            },
            {
              "description": "the id of the guest network the lb rule belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the private port",
              "name": "privateport",
              "type": "string"
            },
            {
              "description": "the name of the load balancer",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain of the load balancer rule",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id of the load balancer",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the load balancer",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the id of the zone the rule belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the account of the load balancer rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the public port",
              "name": "publicport",
              "type": "string"
            },
            {
              "description": "the cidr list to forward traffic from",
              "name": "cidrlist",
              "type": "string"
            },
            {
              "description": "the public ip address",
              "name": "publicip",
              "type": "string"
            },
            {
              "description": "the load balancer rule ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the state of the rule",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Load balancing method used for the global load balancer",
          "name": "gslblbmethod",
          "type": "string"
        },
        {
          "description": "the description of the global load balancer rule",
          "name": "description",
          "type": "string"
        },
        {
          "description": "global load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the global load balancer rule",
          "name": "name",
          "type": "string"
        },
        {
          "description": "session persistence method used for the global load balancer",
          "name": "gslbstickysessionmethodname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists affinity group types available",
      "isasync": false,
      "name": "listAffinityGroupTypes",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        }
      ]
    },
    {
      "description": "Registers an existing template into the CloudStack cloud. ",
      "isasync": false,
      "name": "registerTemplate",
      "params": [
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the format for the template. Possible values include QCOW2, RAW, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL of where the template is hosted. Possible URL include http:// and https://",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the MD5 checksum value of this template",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template is available to all accounts; default is true",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if this template requires HVM",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Register template for the project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "32 or 64 bits support. 64 by default",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Template details in key/value pairs.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the zone the template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,updateTemplate,registerIso",
      "response": [
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disables an AutoScale Vm Group",
      "isasync": true,
      "name": "disableAutoScaleVmGroup",
      "params": [
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "disableAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup",
      "response": [
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        }
      ]
    },
    {
      "description": "Authorizes a particular egress rule for this security group",
      "isasync": true,
      "name": "authorizeSecurityGroupEgress",
      "params": [
        {
          "description": "the cidr list associated",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "The name of the security group. Mutually exclusive with securityGroupName parameter",
          "length": 255,
          "name": "securitygroupname",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional account for the security group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "end port for this egress rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "user to security group mapping",
          "length": 255,
          "name": "usersecuritygrouplist",
          "required": false,
          "type": "map"
        },
        {
          "description": "TCP is default. UDP is the other supported protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "start port for this egress rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional project of the security group",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with securityGroupName parameter",
          "length": 255,
          "name": "securitygroupid",
          "related": "listSecurityGroups",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the CIDR notation for the base IP address of the security group rule",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the starting IP of the security group rule",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the ending IP of the security group rule ",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "security group name",
          "name": "securitygroupname",
          "type": "string"
        },
        {
          "description": "the id of the security group rule",
          "name": "ruleid",
          "type": "string"
        },
        {
          "description": "the type of the ICMP message response",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the protocol of the security group rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "account owning the security group rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the code for the ICMP message response",
          "name": "icmpcode",
          "type": "integer"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists site to site vpn customer gateways",
      "isasync": false,
      "name": "listVpnCustomerGateways",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of the customer gateway",
          "length": 255,
          "name": "id",
          "related": "listVpnCustomerGateways,updateVpnCustomerGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomains,listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updateVpnCustomerGateway",
      "response": [
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a load balancer rule.",
      "isasync": true,
      "name": "deleteLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Get API limit count for the caller",
      "isasync": false,
      "name": "getApiLimit",
      "params": [],
      "related": "resetApiLimit",
      "response": [
        {
          "description": "seconds left to reset counters",
          "name": "expireAfter",
          "type": "long"
        },
        {
          "description": "currently allowed number of apis",
          "name": "apiAllowed",
          "type": "int"
        },
        {
          "description": "the account uuid of the api remaining count",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "number of api already issued",
          "name": "apiIssued",
          "type": "int"
        },
        {
          "description": "the account name of the api remaining count",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attaches an ISO to a virtual machine.",
      "isasync": true,
      "name": "attachIso",
      "params": [
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a port forwarding rule",
      "isasync": true,
      "name": "deletePortForwardingRule",
      "params": [
        {
          "description": "the ID of the port forwarding rule",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists load balancer rules.",
      "isasync": false,
      "name": "listLoadBalancerRules",
      "params": [
        {
          "description": "list by network id the rule belongs to",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine of the load balancer rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the public IP address id of the load balancer rule ",
          "length": 255,
          "name": "publicipid",
          "related": "restartNetwork,associateIpAddress",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createLoadBalancerRule",
      "response": [
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Delete one or more events.",
      "isasync": false,
      "name": "deleteEvents",
      "params": [
        {
          "description": "end date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "start date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the IDs of the events",
          "length": 255,
          "name": "ids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "delete by event type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Accepts or declines project invitation",
      "isasync": true,
      "name": "updateProjectInvitation",
      "params": [
        {
          "description": "list invitations for specified account; this parameter has to be specified with domainId",
          "length": 255,
          "name": "token",
          "required": false,
          "type": "string"
        },
        {
          "description": "account that is joining the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true, accept the invitation, decline if false. True by default",
          "length": 255,
          "name": "accept",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of the project to join",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a detached disk volume.",
      "isasync": false,
      "name": "deleteVolume",
      "params": [
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "uploadVolume,createVolume",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates resource tag(s)",
      "isasync": true,
      "name": "createTags",
      "params": [
        {
          "description": "list of resources to create the tags for",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Map of tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": true,
          "type": "map"
        },
        {
          "description": "identifies client specific tag. When the value is not null, the tag can't be used by cloudStack code internally",
          "length": 255,
          "name": "customer",
          "required": false,
          "type": "string"
        },
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Enables an AutoScale Vm Group",
      "isasync": true,
      "name": "enableAutoScaleVmGroup",
      "params": [
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "updateAutoScaleVmGroup",
      "response": [
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        }
      ]
    },
    {
      "description": "Scales the virtual machine to a new service offering.",
      "isasync": true,
      "name": "scaleVirtualMachine",
      "params": [
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Removes vpn user",
      "isasync": true,
      "name": "removeVpnUser",
      "params": [
        {
          "description": "an optional account for the vpn user. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "remove vpn user from the project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "username for the vpn user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List all public, private, and privileged templates.",
      "isasync": false,
      "name": "listTemplates",
      "params": [
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the template name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list templates by zoneId",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,updateZone",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
          "length": 255,
          "name": "templatefilter",
          "required": true,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,listTemplates,updateTemplate,registerIso",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listIsos,updateIso,copyIso,prepareTemplate,updateTemplate,registerIso",
      "response": [
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Update site to site vpn customer gateway",
      "isasync": true,
      "name": "updateVpnCustomerGateway",
      "params": [
        {
          "description": "If DPD is enabled for VPN connection",
          "length": 255,
          "name": "dpd",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "ikelifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "esplifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "updateVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of this customer gateway",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "length": 255,
          "name": "ikepolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "the account associated with the gateway. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "guest cidr of the customer gateway",
          "length": 255,
          "name": "cidrlist",
          "required": true,
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "length": 255,
          "name": "ipsecpsk",
          "required": true,
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "length": 255,
          "name": "esppolicy",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates iso permissions",
      "isasync": false,
      "name": "updateIsoPermissions",
      "params": [
        {
          "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "permission operator (add, remove, reset)",
          "length": 255,
          "name": "op",
          "required": false,
          "type": "string"
        },
        {
          "description": "true for public template/iso, false for private templates/isos",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true for featured template/iso, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of accounts. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "updateProject,createProject",
          "required": false,
          "type": "list"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,prepareTemplate,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Restarts the network; includes 1) restarting network elements - virtual routers, dhcp servers 2) reapplying all public ips 3) reapplying loadBalancing/portForwarding rules",
      "isasync": true,
      "name": "restartNetwork",
      "params": [
        {
          "description": "The id of the network to restart.",
          "length": 255,
          "name": "id",
          "related": "updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "If cleanup old network elements",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "associateIpAddress",
      "response": [
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Reboots a virtual machine.",
      "isasync": true,
      "name": "rebootVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,rebootVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists load balancer rules.",
      "isasync": false,
      "name": "listGlobalLoadBalancerRules",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "region ID",
          "length": 255,
          "name": "regionid",
          "related": "addRegion",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listGlobalLoadBalancerRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "GSLB service type",
          "name": "gslbservicetype",
          "type": "string"
        },
        {
          "description": "name of the global load balancer rule",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "session persistence method used for the global load balancer",
          "name": "gslbstickysessionmethodname",
          "type": "string"
        },
        {
          "description": "Region Id in which global load balancer is created",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "List of load balancer rules that are part of GSLB rule",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "the load balancer algorithm (source, roundrobin, leastconn)",
              "name": "algorithm",
              "type": "string"
            },
            {
              "description": "the domain ID of the load balancer rule",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain of the load balancer rule",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the state of the rule",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the name of the load balancer",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the public ip address",
              "name": "publicip",
              "type": "string"
            },
            {
              "description": "the project id of the load balancer",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the id of the zone the rule belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the cidr list to forward traffic from",
              "name": "cidrlist",
              "type": "string"
            },
            {
              "description": "the public port",
              "name": "publicport",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with load balancer",
              "name": "tags",
              "response": [
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the public ip address id",
              "name": "publicipid",
              "type": "string"
            },
            {
              "description": "the id of the guest network the lb rule belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the account of the load balancer rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the private port",
              "name": "privateport",
              "type": "string"
            },
            {
              "description": "the load balancer rule ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the load balancer",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the load balancer",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "global load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the description of the global load balancer rule",
          "name": "description",
          "type": "string"
        },
        {
          "description": "DNS domain name given for the global load balancer",
          "name": "gslbdomainname",
          "type": "string"
        },
        {
          "description": "Load balancing method used for the global load balancer",
          "name": "gslblbmethod",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists LBStickiness policies.",
      "isasync": false,
      "name": "listLBStickinessPolicies",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createLBStickinessPolicy",
      "response": [
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists security groups",
      "isasync": false,
      "name": "listSecurityGroups",
      "params": [
        {
          "description": "lists security groups by virtual machine id",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists security groups by name",
          "length": 255,
          "name": "securitygroupname",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list the security group by the id provided",
          "length": 255,
          "name": "id",
          "related": "listSecurityGroups",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the security group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the security group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain name of the security group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the security group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of ingress rules associated with the security group",
          "name": "ingressrule",
          "response": [
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account owning the security group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the security group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the list of egress rules associated with the security group",
          "name": "egressrule",
          "response": [
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            }
          ],
          "type": "set"
        }
      ]
    },
    {
      "description": "Lists all firewall rules for an IP address.",
      "isasync": false,
      "name": "listFirewallRules",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of IP address of the firwall services",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "updateProject,createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createFirewallRule,listEgressFirewallRules",
      "response": [
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates the affinity/anti-affinity group associations of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect.",
      "isasync": true,
      "name": "updateVMAffinityGroup",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter",
          "length": 255,
          "name": "affinitygroupids",
          "related": "listAffinityGroups",
          "required": false,
          "type": "list"
        },
        {
          "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
          "length": 255,
          "name": "affinitygroupnames",
          "related": "listAffinityGroups",
          "required": false,
          "type": "list"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
      "response": [
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Delete site to site vpn connection",
      "isasync": true,
      "name": "deleteVpnConnection",
      "params": [
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "resetVpnConnection,listVpnConnections",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists affinity groups",
      "isasync": false,
      "name": "listAffinityGroups",
      "params": [
        {
          "description": "lists affinity groups by type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists affinity groups by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list the affinity group by the id provided",
          "length": 255,
          "name": "id",
          "related": "listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists affinity groups by virtual machine id",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the description of the affinity group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        },
        {
          "description": "virtual machine Ids associated with this affinity group ",
          "name": "virtualmachineIds",
          "type": "list"
        },
        {
          "description": "the ID of the affinity group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account owning the affinity group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the affinity group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the affinity group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the affinity group",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a user account",
      "isasync": false,
      "name": "updateUser",
      "params": [
        {
          "description": "The secret key for the user. Must be specified with userApiKey",
          "length": 255,
          "name": "usersecretkey",
          "required": false,
          "type": "string"
        },
        {
          "description": "Clear text password (default hashed to SHA256SALT). If you wish to use any other hasing algorithm, you would need to write a custom authentication adapter",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "first name",
          "length": 255,
          "name": "firstname",
          "required": false,
          "type": "string"
        },
        {
          "description": "User uuid",
          "length": 255,
          "name": "id",
          "related": "disableUser,updateUser,lockUser,listUsers",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "last name",
          "length": 255,
          "name": "lastname",
          "required": false,
          "type": "string"
        },
        {
          "description": "The API key for the user. Must be specified with userSecretKey",
          "length": 255,
          "name": "userapikey",
          "required": false,
          "type": "string"
        },
        {
          "description": "Unique username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        }
      ],
      "related": "disableUser,lockUser,listUsers",
      "response": [
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates a project",
      "isasync": true,
      "name": "updateProject",
      "params": [
        {
          "description": "new Admin account for the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "display text of the project",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the project to be modified",
          "length": 255,
          "name": "id",
          "related": "updateProject,createProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createProject",
      "response": [
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a network",
      "isasync": true,
      "name": "deleteNetwork",
      "params": [
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "id",
          "related": "updateNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all static routes",
      "isasync": false,
      "name": "listStaticRoutes",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list static routes by gateway id",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list static route by id",
          "length": 255,
          "name": "id",
          "related": "listStaticRoutes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list static routes by vpc id",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC,createVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "VPC the static route belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain associated with the static route",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the static route",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the static route",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of static route",
          "name": "id",
          "type": "string"
        },
        {
          "description": "static route CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the state of the static route",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the static route",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "VPC gateway the route is created for",
          "name": "gatewayid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with static route",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the account associated with the static route",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "list the vm nics  IP to NIC",
      "isasync": false,
      "name": "listNics",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the nic to to list IPs",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if nic is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the gateway of the nic",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the type of the nic",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the IPv6 address of network",
          "name": "ip6address",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "true if nic is default, false otherwise",
          "name": "macaddress",
          "type": "string"
        },
        {
          "description": "the broadcast uri of the nic",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the ID of the nic",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the netmask of the nic",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the isolation uri of the nic",
          "name": "isolationuri",
          "type": "string"
        },
        {
          "description": "the traffic type of the nic",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the ip address of the nic",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the Secondary ipv4 addr of nic",
          "name": "secondaryip",
          "type": "list"
        },
        {
          "description": "the name of the corresponding network",
          "name": "networkname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates attributes of a template.",
      "isasync": false,
      "name": "updateTemplate",
      "params": [
        {
          "description": "the name of the image file",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the image file",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso,updateTemplate,registerIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the format for the image",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the image supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if image is bootable, false otherwise",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the image",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the template, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this image.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listIsos,updateIso,copyIso,registerIso",
      "response": [
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a snapshot policy for the account.",
      "isasync": false,
      "name": "createSnapshotPolicy",
      "params": [
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "uploadVolume,createVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "maximum number of snapshots to retain",
          "length": 255,
          "name": "maxsnaps",
          "required": true,
          "type": "integer"
        },
        {
          "description": "time the snapshot is scheduled to be taken. Format is:* if HOURLY, MM* if DAILY, MM:HH* if WEEKLY, MM:HH:DD (1-7)* if MONTHLY, MM:HH:DD (1-28)",
          "length": 255,
          "name": "schedule",
          "required": true,
          "type": "string"
        },
        {
          "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY",
          "length": 255,
          "name": "intervaltype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "maximum number of snapshots retained",
          "name": "maxsnaps",
          "type": "int"
        },
        {
          "description": "the interval type of the snapshot policy",
          "name": "intervaltype",
          "type": "short"
        },
        {
          "description": "the time zone of the snapshot policy",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "time the snapshot is scheduled to be taken.",
          "name": "schedule",
          "type": "string"
        },
        {
          "description": "the ID of the snapshot policy",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Accepts or declines project invitation",
      "isasync": true,
      "name": "deleteProjectInvitation",
      "params": [
        {
          "description": "id of the invitation",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates a vm group",
      "isasync": false,
      "name": "updateInstanceGroup",
      "params": [
        {
          "description": "Instance group ID",
          "length": 255,
          "name": "id",
          "related": "updateInstanceGroup",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "new instance group name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Removes VM from specified network by deleting a NIC",
      "isasync": true,
      "name": "removeNicFromVirtualMachine",
      "params": [
        {
          "description": "NIC ID",
          "length": 255,
          "name": "nicid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,removeNicFromVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a particular ingress rule from this security group",
      "isasync": true,
      "name": "revokeSecurityGroupIngress",
      "params": [
        {
          "description": "The ID of the ingress rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Changes the default NIC on a VM",
      "isasync": true,
      "name": "updateDefaultNicForVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,updateDefaultNicForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "NIC ID",
          "length": 255,
          "name": "nicid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disables static rule for given ip address",
      "isasync": true,
      "name": "disableStaticNat",
      "params": [
        {
          "description": "the public IP address id for which static nat feature is being disableed",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a ACL rule in the given network (the network has to belong to VPC)",
      "isasync": true,
      "name": "createNetworkACL",
      "params": [
        {
          "description": "The network of the vm the ACL will be created for",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending port of ACL",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "scl entry action, allow or deny",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "the starting port of ACL",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the traffic type for the ACL,can be Ingress or Egress, defaulted to Ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cidr list to allow traffic from/to",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The network of the vm the ACL will be created for",
          "length": 255,
          "name": "aclid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The network of the vm the ACL will be created for",
          "length": 255,
          "name": "number",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a VPC",
      "isasync": true,
      "name": "createVPC",
      "params": [
        {
          "description": "create VPC for the project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
          "length": 255,
          "name": "cidr",
          "required": true,
          "type": "string"
        },
        {
          "description": "the account associated with the VPC. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the VPC",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the VPC. If used with the account parameter returns the VPC associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the VPC offering",
          "length": 255,
          "name": "vpcofferingid",
          "related": "listVPCOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VPC network domain. All networks inside the VPC will belong to this domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listVPCs,restartVPC",
      "response": [
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    },
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    },
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all supported OS types for this cloud.",
      "isasync": false,
      "name": "listOsTypes",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by Os type Id",
          "length": 255,
          "name": "id",
          "related": "listOsTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by Os Category id",
          "length": 255,
          "name": "oscategoryid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list os by description",
          "length": 255,
          "name": "description",
          "required": false,
          "since": "3.0.1",
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Registers an existing ISO into the CloudStack Cloud.",
      "isasync": false,
      "name": "registerIso",
      "params": [
        {
          "description": "the ID of the OS Type that best represents the OS of this ISO. If the iso is bootable this parameter needs to be passed",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if iso contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the ISO. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the iso or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Register iso for the project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if this ISO is bootable. If not passed explicitly its assumed to be true",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if you want to register the ISO to be publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional account name. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the MD5 checksum value of this ISO",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "Image store uuid",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the zone you wish to register the ISO to.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the URL to where the ISO is currently being hosted",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the name of the ISO",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if you want this ISO to be featured",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listIsos,updateIso,copyIso",
      "response": [
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disassociates an ip address from the account.",
      "isasync": true,
      "name": "disassociateIpAddress",
      "params": [
        {
          "description": "the id of the public ip address to disassociate",
          "length": 255,
          "name": "id",
          "related": "associateIpAddress",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists zones",
      "isasync": false,
      "name": "listZones",
      "params": [
        {
          "description": "the ID of the domain associated with the zone",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the capacity of the zones",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "id",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the zone",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the network type of the zone that the virtual machine belongs to",
          "length": 255,
          "name": "networktype",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if you want to retrieve all available Zones. False if you only want to return the Zones from which you have at least one VM. Default is false.",
          "length": 255,
          "name": "available",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {},
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {
          "description": "the UUID of the affinity group associated, null for public zones",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "the vlan range of the zone",
          "name": "vlan",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a disk volume from a disk offering. This disk volume must still be attached to a virtual machine to make use of it.",
      "isasync": true,
      "name": "createVolume",
      "params": [
        {
          "description": "max iops",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "the domain ID associated with the disk offering. If used with the account parameter returns the disk volume associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the project associated with the volume. Mutually exclusive with account parameter",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to display the volume to the end user or not.",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the snapshot ID for the disk volume. Either diskOfferingId or snapshotId must be passed in.",
          "length": 255,
          "name": "snapshotid",
          "related": "createSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "min iops",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the disk offering. Either diskOfferingId or snapshotId must be passed in.",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Arbitrary volume size",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "uploadVolume",
      "response": [
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resets the password for virtual machine. The virtual machine must be in a \"Stopped\" state and the template must already support this feature for this command to take effect. [async]",
      "isasync": true,
      "name": "resetPasswordForVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,resetPasswordForVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
      "response": [
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        }
      ]
    },
    {
      "description": "Assigns virtual machine or a list of virtual machines to a load balancer rule.",
      "isasync": true,
      "name": "assignToLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list of IDs of the virtual machine that are being assigned to the load balancer rule(i.e. virtualMachineIds=1,2,3)",
          "length": 255,
          "name": "virtualmachineids",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": true,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Extracts an ISO",
      "isasync": true,
      "name": "extractIso",
      "params": [
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        },
        {
          "description": "the url to which the ISO would be extracted",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone where the ISO is originally located",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "extractTemplate",
      "response": [
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Changes the service offering for a virtual machine. The virtual machine must be in a \"Stopped\" state for this command to take effect.",
      "isasync": false,
      "name": "changeServiceForVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines,changeServiceForVirtualMachine",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the service offering ID to apply to the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "listServiceOfferings",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
      "response": [
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroys a l2tp/ipsec remote access vpn",
      "isasync": true,
      "name": "deleteRemoteAccessVpn",
      "params": [
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Reset site to site vpn connection",
      "isasync": true,
      "name": "resetVpnConnection",
      "params": [
        {
          "description": "an optional account for connection. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "resetVpnConnection,listVpnConnections",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for connection. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listVpnConnections",
      "response": [
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Starts a virtual machine.",
      "isasync": true,
      "name": "startVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,startVirtualMachine,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "hostid",
          "related": "listHosts",
          "required": false,
          "since": "3.0.1",
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
      "response": [
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a l2tp/ipsec remote access vpn",
      "isasync": true,
      "name": "createRemoteAccessVpn",
      "params": [
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional account for the VPN. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the VPN. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. Has value true by default",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the range of ip addresses to allocate to vpn clients. The first ip in the range will be taken by the vpn server",
          "length": 255,
          "name": "iprange",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Extracts a template",
      "isasync": true,
      "name": "extractTemplate",
      "params": [
        {
          "description": "the url to which the ISO would be extracted",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the template",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone where the ISO is originally located",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {},
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        }
      ]
    },
    {
      "description": "Detaches any ISO file (if any) currently attached to a virtual machine.",
      "isasync": true,
      "name": "detachIso",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,detachIso,updateVirtualMachine,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,updateVirtualMachine,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,migrateVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
      "response": [
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Acquires and associates a public IP to an account.",
      "isasync": true,
      "name": "associateIpAddress",
      "params": [
        {
          "description": "The network this ip address should be associated to.",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the domain to associate with this IP address",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account to associate with this IP address",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the VPC you want the ip address to be associated with",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,restartVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "region ID from where portable ip is to be associated.",
          "length": 255,
          "name": "regionid",
          "related": "addRegion",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the availability zone you want to acquire an public IP address from",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Deploy vm for the project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "should be set to true if public IP is required to be transferable across zones, if not specified defaults to false",
          "length": 255,
          "name": "isportable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "VPC the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "List virtual machine snapshot by conditions",
      "isasync": false,
      "name": "listVMSnapshot",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "lists snapshot by snapshot name or display name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "state of the virtual machine snapshot",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "listVMSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "updateDomain,listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,updateVirtualMachine,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the state of the vm snapshot",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the parent ID of the vm snapshot",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "the Zone ID of the vm snapshot",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the create date of the vm snapshot",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the description of the vm snapshot",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the parent displayName of the vm snapshot",
          "name": "parentName",
          "type": "string"
        },
        {
          "description": "VM Snapshot type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the vm ID of the vm snapshot",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the display name of the vm snapshot",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "indiates if this is current snapshot",
          "name": "current",
          "type": "boolean"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the vm snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the vm snapshot",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Removes a virtual machine or a list of virtual machines from a load balancer rule.",
      "isasync": true,
      "name": "removeFromLoadBalancerRule",
      "params": [
        {
          "description": "The ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list of IDs of the virtual machines that are being removed from the load balancer rule (i.e. virtualMachineIds=1,2,3)",
          "length": 255,
          "name": "virtualmachineids",
          "related": "revertToVMSnapshot,updateVirtualMachine,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,restoreVirtualMachine,assignVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "This command allows a user to register for the developer API, returning a secret key and an API key. This request is made through the integration API port, so it is a privileged command and must be made on behalf of a user. It is up to the implementer just how the username and password are entered, and then how that translates to an integration API request. Both secret key and API key should be returned to the user",
      "isasync": false,
      "name": "registerUserKeys",
      "params": [
        {
          "description": "User id",
          "length": 255,
          "name": "id",
          "related": "lockUser,listUsers",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the secret key of the registered user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the api key of the registered user",
          "name": "apikey",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds vpn users",
      "isasync": true,
      "name": "addVpnUser",
      "params": [
        {
          "description": "add vpn user to the specific project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "password for the username",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "username for the vpn user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional account for the vpn user. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listVpnUsers",
      "response": [
        {
          "description": "the username of the vpn user",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of the Vpn User",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpn userID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists VPCs",
      "isasync": false,
      "name": "listVPCs",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list VPCs by restartRequired option",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
          "length": 255,
          "name": "cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by ID of the VPC offering",
          "length": 255,
          "name": "vpcofferingid",
          "related": "listVPCOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by name of the VPC",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list by zone",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list VPC supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "list VPCs by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC by id",
          "length": 255,
          "name": "id",
          "related": "listVPCs,restartVPC",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "restartVPC",
      "response": [
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    },
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "List Conditions for the specific user",
      "isasync": false,
      "name": "listConditions",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the policy",
          "length": 255,
          "name": "policyid",
          "related": "createAutoScalePolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "ID of the Condition.",
          "length": 255,
          "name": "id",
          "related": "listConditions",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Counter-id of the condition.",
          "length": 255,
          "name": "counterid",
          "related": "createCounter",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Relational Operator to be used with threshold.",
          "name": "relationaloperator",
          "type": "string"
        },
        {
          "description": "the id of the Condition",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the owner of the Condition.",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the Condition",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Details of the Counter.",
          "name": "counter",
          "type": "list"
        },
        {
          "description": "Threshold Value for the counter.",
          "name": "threshold",
          "type": "long"
        },
        {
          "description": "the domain name of the owner.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain id of the Condition owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the Condition.",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates properties of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect. UpdateVirtualMachine does not first check whether the VM is stopped. Therefore, stop the VM manually before issuing this call.",
      "isasync": false,
      "name": "updateVirtualMachine",
      "params": [
        {
          "description": "user generated name",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.",
          "length": 32768,
          "name": "userdata",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents this VM.",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,updateVirtualMachine,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,restoreVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if high-availability is enabled for the virtual machine, false otherwise",
          "length": 255,
          "name": "haenable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "group of the virtual machine",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the vm to the end user or not.",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if VM contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "revertToVMSnapshot,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,restoreVirtualMachine,listVirtualMachines",
      "response": [
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a LB stickiness policy.",
      "isasync": true,
      "name": "deleteLBStickinessPolicy",
      "params": [
        {
          "description": "the ID of the LB stickiness policy",
          "length": 255,
          "name": "id",
          "related": "createLBStickinessPolicy",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists resource limits.",
      "isasync": false,
      "name": "listResourceLimits",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "createProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lists resource limits by ID.",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Type of resource to update. Values are 0, 1, 2, 3, and 4.0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses an account can own. 2 - Volume. Number of disk volumes an account can own.3 - Snapshot. Number of snapshots an account can own.4 - Template. Number of templates an account can register/create.5 - Project. Number of projects an account can own.6 - Network. Number of networks an account can own.7 - VPC. Number of VPC an account can own.8 - CPU. Number of CPU an account can allocate for his resources.9 - Memory. Amount of RAM an account can allocate for his resources.10 - Primary Storage. Amount of Primary storage an account can allocate for his resoruces.11 - Secondary Storage. Amount of Secondary storage an account can allocate for his resources.",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
          "name": "max",
          "type": "long"
        },
        {
          "description": "the project name of the resource limit",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the resource limit",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the resource limit",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the resource limit",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the account of the resource limit",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available service offerings.",
      "isasync": false,
      "name": "listServiceOfferings",
      "params": [
        {
          "description": "name of the service offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the service offering",
          "length": 255,
          "name": "id",
          "related": "listServiceOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the domain associated with the service offering",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine. Pass this in if you want to see the available service offering that a virtual machine can be changed to.",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,restoreVirtualMachine,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the system VM type. Possible types are \"consoleproxy\", \"secondarystoragevm\" or \"domainrouter\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "is this a system vm offering",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "int"
        },
        {
          "description": "the domain id of the service offering",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the tags for the service offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "int"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the clock rate CPU speed in Mhz",
          "name": "cpuspeed",
          "type": "int"
        },
        {
          "description": "Domain name for the offering",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        },
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Deletes a vmsnapshot.",
      "isasync": true,
      "name": "deleteVMSnapshot",
      "params": [
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a autoscale vm profile.",
      "isasync": true,
      "name": "deleteAutoScaleVmProfile",
      "params": [
        {
          "description": "the ID of the autoscale profile",
          "length": 255,
          "name": "id",
          "related": "listAutoScaleVmProfiles",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a snapshot of a disk volume.",
      "isasync": true,
      "name": "deleteSnapshot",
      "params": [
        {
          "description": "The ID of the snapshot",
          "length": 255,
          "name": "id",
          "related": "createSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates a project",
      "isasync": true,
      "name": "createProject",
      "params": [
        {
          "description": "name of the project",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "account who will be Admin for the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a project",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "display text of the project",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a load balancer rule",
      "isasync": true,
      "name": "createLoadBalancerRule",
      "params": [
        {
          "description": "the public port from where the network traffic will be load balanced from",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "The guest network this rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "updateNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. If not specified 1) defaulted to false when LB rule is being created for VPC guest network 2) in all other cases defaulted to true",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the private port of the private ip address/virtual machine where the network traffic will be load balanced to",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the account associated with the load balancer. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the load balancer",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "public ip address id from where the network traffic will be load balanced from",
          "length": 255,
          "name": "publicipid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "zone where the load balancer is going to be created. This parameter is required when LB service provider is ElasticLoadBalancerVm",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an autoscale policy for a provision or deprovision action, the action is taken when the all the conditions evaluates to true for the specified duration. The policy is in effect once it is attached to a autscale vm group.",
      "isasync": true,
      "name": "createAutoScalePolicy",
      "params": [
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "length": 255,
          "name": "quiettime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "length": 255,
          "name": "action",
          "required": true,
          "type": "string"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "length": 255,
          "name": "duration",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "length": 255,
          "name": "conditionids",
          "related": "",
          "required": true,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the autoscale policy ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "name": "quiettime",
          "type": "integer"
        },
        {
          "description": "the domain ID of the autoscale policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the domain name of the autoscale policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "name": "conditions",
          "type": "list"
        },
        {
          "description": "the account owning the autoscale policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the autoscale policy",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "name": "duration",
          "type": "integer"
        },
        {
          "description": "the project id autoscale policy",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Restore a VM to original template/ISO or new template/ISO",
      "isasync": true,
      "name": "restoreVirtualMachine",
      "params": [
        {
          "description": "an optional template Id to restore vm from the new template. This can be an ISO id in case of restore vm deployed using ISO",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,updateIso,copyIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,restoreVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,listVirtualMachines",
      "response": [
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "List Event Types",
      "isasync": false,
      "name": "listEventTypes",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "Event Type",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes affinity group",
      "isasync": true,
      "name": "deleteAffinityGroup",
      "params": [
        {
          "description": "the account of the affinity group. Must be specified with domain ID",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "The name of the affinity group. Mutually exclusive with id parameter",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID of account owning the affinity group",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the affinity group. Mutually exclusive with name parameter",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Copies an iso from one zone to another.",
      "isasync": true,
      "name": "copyIso",
      "params": [
        {
          "description": "Template ID.",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso,copyIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is being copied to.",
          "length": 255,
          "name": "destzoneid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is currently hosted on.",
          "length": 255,
          "name": "sourcezoneid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsos,updateIso",
      "response": [
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Uploads a data disk.",
      "isasync": true,
      "name": "uploadVolume",
      "params": [
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Image store uuid",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the volume. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "the MD5 checksum value of this volume",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "Upload volume for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the volume",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the zone the volume is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the URL of where the volume is hosted. Possible URL include http:// and https://",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with volume",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "io requests read rate of the disk volume",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk volume",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists autoscale vm profiles.",
      "isasync": false,
      "name": "listAutoScaleVmProfiles",
      "params": [
        {
          "description": "the templateid of the autoscale vm profile",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,updateIso",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the autoscale vm profile",
          "length": 255,
          "name": "id",
          "related": "listAutoScaleVmProfiles",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the otherdeployparameters of the autoscale vm profile",
          "length": 255,
          "name": "otherdeployparams",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "name": "autoscaleuserid",
          "type": "string"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "name": "destroyvmgraceperiod",
          "type": "integer"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
          "name": "otherdeployparams",
          "type": "string"
        },
        {},
        {
          "description": "the template to be used while deploying a virtual machine",
          "name": "templateid",
          "type": "string"
        },
        {},
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the service offering to be used while deploying a virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the availability zone to be used while deploying a virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the autoscale vm profile ID",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a Load Balancer stickiness policy ",
      "isasync": true,
      "name": "createLBStickinessPolicy",
      "params": [
        {
          "description": "param list. Example: param[0].name=cookiename&param[0].value=LBCookie ",
          "length": 255,
          "name": "param",
          "required": false,
          "type": "map"
        },
        {
          "description": "name of the LB Stickiness policy method, possible values can be obtained from ListNetworks API ",
          "length": 255,
          "name": "methodname",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "listIpForwardingRules",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name of the LB Stickiness policy",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the description of the LB Stickiness policy",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Stops a virtual machine.",
      "isasync": true,
      "name": "stopVirtualMachine",
      "params": [
        {
          "description": "Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend).  The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,migrateVirtualMachineWithVolume,destroyVirtualMachine,listVirtualMachines",
      "response": [
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an instant snapshot of a volume.",
      "isasync": true,
      "name": "createSnapshot",
      "params": [
        {
          "description": "The domain ID of the snapshot. If used with the account parameter, specifies a domain for the account associated with the disk volume.",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The account of the snapshot. The account parameter must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "policy id of the snapshot, if this is null, then use MANUAL_POLICY.",
          "length": 255,
          "name": "policyid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with snapshot",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists accounts and provides detailed account information for listed accounts",
      "isasync": false,
      "name": "listAccounts",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list account by account ID",
          "length": 255,
          "name": "id",
          "related": "markDefaultZoneForAccount,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list account by account name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list accounts by state. Valid states are enabled, disabled, and locked.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list accounts by account type. Valid account types are 1 (admin), 2 (domain-admin), and 0 (user).",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "long"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list accounts by cleanuprequred attribute (values are true or false)",
          "length": 255,
          "name": "iscleanuprequired",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "markDefaultZoneForAccount",
      "response": [
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "short"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs too",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs too",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "short"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates an ISO file.",
      "isasync": false,
      "name": "updateIso",
      "params": [
        {
          "description": "sort key of the template, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if the image supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if image is bootable, false otherwise",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the format for the image",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the image file",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this image.",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the image file",
          "length": 255,
          "name": "id",
          "related": "listIsos,updateIso",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the display text of the image",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listIsos",
      "response": [
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        }
      ]
    },
    {
      "description": "List the ip forwarding rules",
      "isasync": false,
      "name": "listIpForwardingRules",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists all rules applied to the specified Vm.",
          "length": 255,
          "name": "virtualmachineid",
          "related": "revertToVMSnapshot,destroyVirtualMachine,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list the rule belonging to this public ip address",
          "length": 255,
          "name": "ipaddressid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "listIpForwardingRules",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroys a virtual machine. Once destroyed, only the administrator can recover it.",
      "isasync": true,
      "name": "destroyVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "revertToVMSnapshot,destroyVirtualMachine,listVirtualMachines",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            }
          ],
          "type": "set"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a network",
      "isasync": true,
      "name": "updateNetwork",
      "params": [
        {
          "description": "CIDR for Guest VMs,Cloudstack allocates IPs to Guest VMs only from this CIDR",
          "length": 255,
          "name": "guestvmcidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "updateNetworkOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "id",
          "related": "updateNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the new name for the network",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the new display text for the network",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "network domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Force update even if cidr type is different",
          "length": 255,
          "name": "changecidr",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the second DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the first DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Retrieves a cloud identifier.",
      "isasync": false,
      "name": "getCloudIdentifier",
      "params": [
        {
          "description": "the user ID for the cloud identifier",
          "length": 255,
          "name": "userid",
          "related": "lockUser,listUsers",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the signed response for the cloud identifier",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "the user ID for the cloud identifier",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the cloud identifier",
          "name": "cloudidentifier",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a firewall rule for a given ip address",
      "isasync": true,
      "name": "createFirewallRule",
      "params": [
        {
          "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of firewallrule: system/user",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ending port of firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listEgressFirewallRules",
      "response": [
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Revert VM from a vmsnapshot.",
      "isasync": true,
      "name": "revertToVMSnapshot",
      "params": [
        {
          "description": "The ID of the vm snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listVirtualMachines",
      "response": [
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "List the virtual machines owned by the account.",
      "isasync": false,
      "name": "listVirtualMachines",
      "params": [
        {
          "description": "list vms by template",
          "length": 255,
          "name": "templateid",
          "related": "listIsos",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list vms by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the virtual machine",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "listHosts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "findStoragePoolsForMigration",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list vms by iso",
          "length": 255,
          "name": "isoid",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network type; true if need to list vms using Virtual Network, false otherwise",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the pod ID",
          "length": 255,
          "name": "podid",
          "related": "updatePod",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "state of the virtual machine",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list vms by vpc",
          "length": 255,
          "name": "vpcid",
          "related": "restartVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the group ID",
          "length": 255,
          "name": "groupid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the read (bytes) of disk on the vm",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "ssh key-pair",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the vm",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "virtual machine Ids associated with this affinity group ",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the speed of each cpu",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the number of cpu this virtual machine is running with",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the read (io) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the write (bytes) of disk on the vm",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the write (io) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Restarts a VPC",
      "isasync": true,
      "name": "restartVPC",
      "params": [
        {
          "description": "the id of the VPC",
          "length": 255,
          "name": "id",
          "related": "restartVPC",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "response": [
            {
              "description": "the id of the network",
              "name": "id",
              "type": "string"
            },
            {
              "description": "true if network is system, false otherwise",
              "name": "issystem",
              "type": "boolean"
            },
            {
              "description": "the owner of the network",
              "name": "account",
              "type": "string"
            },
            {
              "description": "name of the network offering the network is created from",
              "name": "networkofferingname",
              "type": "string"
            },
            {
              "description": "the first DNS for the network",
              "name": "dns1",
              "type": "string"
            },
            {
              "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "availability of the network offering the network is created from",
              "name": "networkofferingavailability",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with network",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the project id of the ipaddress",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "The vlan of the network. This parameter is visible to ROOT admins only",
              "name": "vlan",
              "type": "string"
            },
            {
              "description": "the second DNS for the network",
              "name": "dns2",
              "type": "string"
            },
            {
              "description": "list networks that are persistent",
              "name": "ispersistent",
              "type": "boolean"
            },
            {
              "description": "zone id of the network",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
              "name": "reservediprange",
              "type": "string"
            },
            {
              "description": "the network's gateway",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "display text of the network offering the network is created from",
              "name": "networkofferingdisplaytext",
              "type": "string"
            },
            {
              "description": "related to what other network configuration",
              "name": "related",
              "type": "string"
            },
            {
              "description": "true network requires restart",
              "name": "restartrequired",
              "type": "boolean"
            },
            {
              "description": "true if network supports specifying ip ranges, false otherwise",
              "name": "specifyipranges",
              "type": "boolean"
            },
            {
              "description": "true if users from subdomains can access the domain level network",
              "name": "subdomainaccess",
              "type": "boolean"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "an optional field, whether to the display the network to the end user or not.",
              "name": "displaynetwork",
              "type": "boolean"
            },
            {
              "description": "the displaytext of the network",
              "name": "displaytext",
              "type": "string"
            },
            {
              "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
              "name": "networkcidr",
              "type": "string"
            },
            {
              "description": "network offering id the network is created from",
              "name": "networkofferingid",
              "type": "string"
            },
            {
              "description": "true if network is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the project name of the address",
              "name": "project",
              "type": "string"
            },
            {
              "description": "VPC the network belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the domain id of the network owner",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "list networks available for vm deployment",
              "name": "canusefordeploy",
              "type": "boolean"
            },
            {
              "description": "acl type - access type to the network",
              "name": "acltype",
              "type": "string"
            },
            {
              "description": "Broadcast domain type of the network",
              "name": "broadcastdomaintype",
              "type": "string"
            },
            {
              "description": "the list of services",
              "name": "service",
              "response": [
                {
                  "description": "the service provider name",
                  "name": "provider",
                  "response": [
                    {
                      "description": "true if individual services can be enabled/disabled",
                      "name": "canenableindividualservice",
                      "type": "boolean"
                    },
                    {
                      "description": "the physical network this belongs to",
                      "name": "physicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "state of the network provider",
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "description": "the destination physical network",
                      "name": "destinationphysicalnetworkid",
                      "type": "string"
                    },
                    {
                      "description": "the provider name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "uuid of the network provider",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "description": "services for this provider",
                      "name": "servicelist",
                      "type": "list"
                    }
                  ],
                  "type": "list"
                },
                {
                  "description": "the service name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the list of capabilities",
                  "name": "capability",
                  "response": [
                    {
                      "description": "the capability value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the capability name",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "description": "can this service capability value can be choosable while creatine network offerings",
                      "name": "canchooseservicecapability",
                      "type": "boolean"
                    }
                  ],
                  "type": "list"
                }
              ],
              "type": "list"
            },
            {
              "description": "the name of the network",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the name of the zone the network belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "ACL Id associated with the VPC network",
              "name": "aclid",
              "type": "string"
            },
            {
              "description": "true if network offering is ip conserve mode enabled",
              "name": "networkofferingconservemode",
              "type": "boolean"
            },
            {
              "description": "state of the network",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the network domain",
              "name": "networkdomain",
              "type": "string"
            },
            {
              "description": "the type of the network",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the traffic type of the network",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the network's netmask",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the domain name of the network owner",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the physical network id",
              "name": "physicalnetworkid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Replaces ACL associated with a Network or private gateway",
      "isasync": true,
      "name": "replaceNetworkACLList",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "aclid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "networkid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the private gateway",
          "length": 255,
          "name": "gatewayid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all egress firewall rules for network id.",
      "isasync": false,
      "name": "listEgressFirewallRules",
      "params": [
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the id network network for the egress firwall services",
          "length": 255,
          "name": "networkid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the id of IP address of the firwall services",
          "length": 255,
          "name": "ipaddressid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates an existing autoscale vm group.",
      "isasync": true,
      "name": "updateAutoScaleVmGroup",
      "params": [
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "length": 255,
          "name": "maxmembers",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "length": 255,
          "name": "minmembers",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list of scaledown autoscale policies",
          "length": 255,
          "name": "scaledownpolicyids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "length": 255,
          "name": "interval",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list of scaleup autoscale policies",
          "length": 255,
          "name": "scaleuppolicyids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "updateAutoScaleVmGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a template visibility permissions. A public template is visible to all accounts within the same domain. A private template is visible only to the owner of the template. A priviledged template is a private template with account permissions added. Only accounts specified under the template permissions are visible to them.",
      "isasync": false,
      "name": "updateTemplatePermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true for featured template/iso, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true for public template/iso, false for private templates/isos",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of accounts. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "permission operator (add, remove, reset)",
          "length": 255,
          "name": "op",
          "required": false,
          "type": "string"
        },
        {
          "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists site to site vpn connection gateways",
      "isasync": false,
      "name": "listVpnConnections",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of the vpn connection",
          "length": 255,
          "name": "id",
          "related": "listVpnConnections",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of vpc",
          "length": 255,
          "name": "vpcid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "guest cidr list of the customer gateway",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists VPC offerings",
      "isasync": false,
      "name": "listVPCOfferings",
      "params": [
        {
          "description": "list VPC offerings by id",
          "length": 255,
          "name": "id",
          "related": "listVPCOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if need to list only default VPC offerings. Default value is false",
          "length": 255,
          "name": "isdefault",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list VPC offerings by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC offerings by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list VPC offerings by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC offerings supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a vm group",
      "isasync": false,
      "name": "deleteInstanceGroup",
      "params": [
        {
          "description": "the ID of the instance group",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists vpn users",
      "isasync": false,
      "name": "listVpnUsers",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username of the vpn user.",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The uuid of the Vpn user",
          "length": 255,
          "name": "id",
          "related": "listVpnUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the state of the Vpn User",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the username of the vpn user",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the vpn userID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available ISO files.",
      "isasync": false,
      "name": "listIsos",
      "params": [
        {
          "description": "true if the ISO is publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this ISO is ready to be deployed",
          "length": 255,
          "name": "isready",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list ISO by id",
          "length": 255,
          "name": "id",
          "related": "listIsos",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "list all isos by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
          "length": 255,
          "name": "isofilter",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with tempate",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        }
      ]
    }
  ],
  "count": 212
}
